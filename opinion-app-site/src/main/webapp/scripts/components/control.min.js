jQuery.fn.control = function () {
    if (arguments.length == 0) return [];
    var X = arguments[0] || {};
    var v = $(this);
    var s = null;
    var Y = function (p) {
    	
        var q = $("<div class=\"form-center\"></div>");
        
        switch (p) {
        case 1:
            {
                break
            }
        case 2:
            {
                var o = $("<div class=\"control-container\">" +
        		"<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">" +
        			"<tr>" +
        				"<td valign=\"top\" class=\"left-side\">" +
        					"<div class=\"tab-move-control\"></div>" +
        				"</td>" +
        				"<td valign=\"top\" class=\"right-side\">" +
            				"<div class=\"control-edit ui-form\" style=\"display: none;\">" +
                			"<div class=\"row\" style=\"height: 52px;\">" +
                				"<div class=\"cell\"><span class=\"label-edit-control-number\"></span>.&nbsp;</div>" +
                				"<div class=\"cell\"><textarea style=\"width: 304px; height: 47px;\" autocomplete=\"off\" class=\"input-content\" maxlength=\"1000\"></textarea></div>" +
                			"</div>" +
                			"<div class=\"row-choice\">" +
                				"<label><span><input type=\"checkbox\" class=\"checkbox-is-mandatory\" /></span>Required question</label>" +
                			"</div>" +
                			"<div class=\"row-choice\">" +
                				"<label><span><input type=\"checkbox\" class=\"checkbox-link\" /></span>Add Image/Embed Code</label>" +
                				"<div class=\"editor-link\" style=\"display: none; padding: 10px 0px 0px 20px;\">" +
	                				"<div>" +
	                					"<select class=\"select-link-type\"><option value=\"1\">Link to Image</option><option value=\"2\">Embed Code</option></select>" +
	                				"</div>" +
            						"<div class=\"holder-image\" style=\"display: none; overflow: hidden;\">" +
            							"<input class=\"input-image\" type=\"text\" style=\"width: 284px\" />" +
            						"</div>" +
            						"<div class=\"holder-embed-code\" style=\"display: none; overflow: hidden;\">" +
            							"<textarea class=\"textarea-embed-code\" style=\"width: 284px; height: 47px;\" autocomplete=\"off\"></textarea>" +
            						"</div>" +
        						"</div>" +
                			"</div>" +
                			"<div class=\"row-choice\">" +
                				"<label><span><input type=\"checkbox\" class=\"checkbox-is-enable-note\" /></span>Help text</label>" +
                				"<div class=\"container-note\" style=\"display: none; height: 52px; padding: 10px 0px 0px 20px;\">" +
                					"<textarea style=\"width: 284px; height: 47px;\" autocomplete=\"off\" class=\"textarea-note\"></textarea>" +
                				"</div>" +
                			"</div>" +
							
                			"<div>" +
                				"<div>" +
                					"<b>Choices</b>" +
	                				"<select>" +
	                					"<option>Pre-defined choices</option>" +
	                					"<optgroup label=\"Demographics\">" +
	                						"<option value=\"Male, Female\">Gender</option>" +
	                						"<option value=\"Single, Married, Divorced\">Marital Status</option>" +
	                					"</optgroup>" +
	                					"<optgroup label=\"Scaling\">" +
		            						"<option value=\"Strongly Disagree,Disagree,Agree,Strongly Agree\">Agree/Disagree</option>" +
		            						"<option value=\"Very Fair,Fair,Good,Very Good\">Good/Poor</option>" +
		            					"</optgroup>" +
		            					"<optgroup label=\"Perpective View\">" +
		            						"<option value=\"Yes.I like this.,No.I don't like this.\">Like/Dislike</option>" +
		            						"<option value=\"Yes,No\">Yes/No</option>" +
		            						"<option value=\"True,False\">True/False</option>" +
		            					"</optgroup>" +
		            					"<optgroup label=\"Date and Time\">" +
		            						"<option value=\"Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday\">Days of the Week</option>" +
		            						"<option value=\"January,February,March,April,May,June,July,August,September,October,November,December\">Months of the Year</option>" +
		            					"</optgroup>" +
	                				"</select>" +
                				"</div>" +
                				"<div style=\"padding-top: 4px;\">" +
                					"<ul class=\"options-list\" style=\"list-style: none outside none; padding: 0px; margin: 0px;\"></ul>" +
                					"<div style=\"padding-left: 20px;clear: both;\"><a href=\"javascript:;\" title=\"Add an option...\" class=\"button-add-option\">Add an option...</a></div>" +
                				"</div>" +
                				"<div style=\"clear: both; padding-top: 12px;\">" +
	                				"<div class=\"row-choice\">" +
										"<label><span><input type=\"checkbox\" class=\"checkbox-is-enable-other\" /></span>Add \"Other\" option</label>" +
										"<div class=\"container-other-properties\" style=\"display: none; padding: 10px 0 0 20px;\">" +
											"<input type=\"text\" class=\"input-other-title\" autocomlete=\"off\" />" +
										"</div>" +
									"</div>" +
                				"</div>" +
                			"</div>" +
                			
                			"<div class=\"row-choice\">" +
                				"<label><span><input type=\"checkbox\" class=\"checkbox-is-enable-comment\" /></span>Use Comments</label>" +
                				"<div class=\"container-comment\" style=\"display: none; height: 52px; padding: 10px 0px 0px 20px;\">" +
                					"<textarea style=\"width: 284px; height: 47px;\" autocomplete=\"off\" maxlength=\"1000\" class=\"input-comment\"></textarea>" +
                				"</div>" +
                			"</div>" +
                			
                			"<div>" +
								"<h2>Display Options:</h2>" +
								"<div class=\"row\">" +
									"<div class=\"cell\" style=\"width: 130px;\">Options Types:</div><div class=\"cell\"><select class=\"dropdown-input-type\"><option value=\"0\">Multiple Choice (select only one answer)</option><option value=\"1\">Drop-down (choose only one answer)</option><option value=\"2\">Multiple Choice (select multiple answers)</option></select></div>" +
									"<div class=\"cell container-default-non-selected-option-text\" style=\"margin-left: 12px; display: none\"><input type=\"text\" class=\"input-default-non-selected-option-text\" autocomlete=\"off\"/></div>" +
								"</div>" +
								"<div class=\"row\" style=\"display: none\">" +
									"<div class=\"cell\" style=\"width: 130px;\"></div><div class=\"cell\"><label><input type=\"checkbox\" class=\"checkbox-randomize-options\" />Display answer choices at random order.</label></div>" +
								"</div>" +
								"<div class=\"row\" style=\"display: none\">" +
									"<div class=\"cell\" style=\"width: 130px;\">Arrange:</div><div class=\"cell\"><select><option value=\"0\">Vertical</option><option value=\"1\">Horizontal</option></select></div>" +
								"</div>" +
                			"</div>" +
                			
                			"<div class=\"row\">" +
                				"<div class=\"cell\"><a href=\"javascript:;\" title=\"Done Editing\" class=\"button-blue save-control-button\"><span>Done Editing</span></a></div><div class=\"cell\" style=\"padding-left: 8px; line-height: 21px;\"><a href=\"javascript:;\" title=\"Cancel\" class=\"cancel-control-button\">Cancel</a></div>" +
                			"</div>" +
                		"</div>" +
                		"<div class=\"control-view demo-question\">" +
                			"<div class=\"control-panel\"><a href=\"javascript:;\" class=\"edit-control-button button-white\" tag=\"edit\" title=\"Edit\"><span>Edit</span></a>&nbsp;<a href=\"javascript:;\" class=\"copy-control-button button-white\" tag=\"copy\" title=\"Copy\"><span>Copy</span></a>&nbsp;<a href=\"javascript:;\" class=\"delete-control-button\" tag=\"delete\" title=\"Delete\"><span>Delete</span></a></div>" +
                			"<div class=\"demo-question-heading\">" +
                				"<span class=\"number\"></span>.&nbsp;" +
                				"<span class=\"label-mandatory\" style=\"display: none;\">*&nbsp;</span>" +
                				"<span class=\"label-content\">Enter your question here.</span>" +
                			"</div>" +
                			"<div class=\"demo-question-content\">" +
	                			"<div class=\"container-embed-code q-image\" style=\"display: none\"></div>" +
	                			"<div class=\"label-note q-help\" style=\"display: none\">You can enter some information about this question here.</div>" +
	                			"<ul class=\"container-control-includes\"></ul>" +
	                			"<div class=\"container-control-other\"></div>" +
	                			"<div class=\"container-comment-field q-comment-container\" style=\"display: none\">" +
	                				"<div class=\"q-comment\"><label class=\"label-comment\">Please help us understand why you selected this answer</label></div>" +
	                				"<div>" +
	                					"<textarea class=\"textarea-field textarea-comment\" autocomplete=\"off\"></textarea>" +
	                				"</div>" +
	                			"</div>" +
                			"</div>" +
                		"</div>" +
        				"</td>" +
        			"</tr>" +
        		"</table>" +
        		"</div>");
                
                
                var c = q; //.find('.form-center:first');
                o.appendTo(c);
                
                
                var link = null;
                var linkTypeId = 0;
                
                var r = o.find('.control-edit');
                var s = o.find('.control-view');
                var t = X.controlId;
                var u = false;
                var w = null;
                w = r.find('ul.options-list');
                //w.sortable("destroy");
                w.sortable({
                    placeholder: "options-list-drag",
                    handle: ".tab-move-option",
                    opacity: 0.7,
                    axis: "y",
                    cursor: "pointer",
                    scroll: true
                });
                var d = r.find('.container-other-properties');
                var z = [];
                var A = [];
                var B = function () {
                    var b = [];
                    w.children().each(function (i, a) {
                        if ($(a).attr("optionid") != undefined) {
                            b.push(parseInt($(a).attr("optionid")))
                        }
                    });
                    return b
                };
                
                // default add
                var R = null;
                var W = function(b) {
                	R = b;
                	var S = r.find('.input-default-non-selected-option-text');
                	S.val(((b.text != "" && b.text != null) ? b.text : contentDictionary.titles.title_DefaultNoneSelectedOption));
                	S.attr('optionid', b.optionId);
                	
                };
                
                // other add
                var Q = null;
                var O = function(b) {
                	Q = b;
                	r.find('.checkbox-is-enable-other').prop('checked', true);
                	var l = r.find('.input-other-title');
                	l.val(((b.text != "" && b.text != null) ? b.text : contentDictionary.titles.title_Other));
                	l.attr('optionid', b.optionId);
                	
                	d.show();
                	
                };
                
                var C = function () {
                	var j = 0;
                    z = [];
                    w.children().each(function (i, a) {
                        if ($(a).attr("optionid") != undefined) {
                            var b = $.removeHTMLTags($(a).find(".input-option-text").val()).replace(/\r/g, "");
                            var c = $(a).find('.checkbox-enable-additional-details-or-comments').is(':checked');
                            var d = (c ? $.removeHTMLTags($(a).find('.input-additional-details-or-comments').val()).replace(/\r/g, "") : null);
                            var e = {
                                optionId: parseInt($(a).attr("optionid")),
                                optionKindId : 0,
                                status: "updated",
                                text: b,
                                value: b,
                                isEnableAdditionalDetails: c,
                                additionalDetailsTitle: d
                            };
                            z.push(e);
                        } else {
                            var b = $.removeHTMLTags($(a).find(".input-option-text").val()).replace(/\r/g, "");
                            var c = $(a).find('.checkbox-enable-additional-details-or-comments').is(':checked');
                            var d = (c ? $.removeHTMLTags($(a).find('.input-additional-details-or-comments').val()).replace(/\r/g, "") : null);
                            var e = {
                                controlId: t,
                                optionId: null,
                                optionKindId : 0,
                                status: "added",
                                text: b,
                                value: b,
                                isEnableAdditionalDetails: c,
                                additionalDetailsTitle: d,
                                orderId: i,
                                opinionId: X.opinionId
                            };
                            z.push(e);
                        }
                        j++;
                    });
                    
                    // other 
                    if(r.find('.checkbox-is-enable-other').is(':checked')) {
                    	
                    	var l = r.find('.input-other-title');
                    	if(l.attr('optionid') != undefined && Q != null) {
                    		var b = $.removeHTMLTags(l.val()).replace(/\r/g, "");
	                    	var e = {
	                            optionId: parseInt(l.attr('optionid')),
	                            optionKindId: 1,
	                            status: "updated",
	                            text: b,
	                            value: b,
	                            isEnableAdditionalDetails: false,
	                            additionalDetailsTitle: null,
	                            orderId: j
	                        };
	                        z.push(e);
                    	} else {
                    		var b = $.removeHTMLTags(l.val()).replace(/\r/g, "");
	                    	var e = {
	                            controlId: t,
	                            optionId: null,
	                            optionKindId: 1,
	                            status: "added",
	                            text: b,
	                            value: b,
	                            isEnableAdditionalDetails: false,
	                            additionalDetailsTitle: null,
	                            orderId: j,
	                            opinionId: X.opinionId
	                        };
	                        z.push(e);
                    	}
                        
                    } else {
                    	
                    	if(Q != null) {
	                    	var l = r.find('.input-other-title');
	                    	if(l.attr('optionid') != undefined) {
	                    		var a = {
	                                optionId: parseInt(l.attr('optionid')),
	                                status: "deleted"
	                            };
	                            A.push(a);
	                    	}
                    	}
                    	
                    }
                    
                    // default selected
                    if(r.find('.dropdown-input-type')[0].selectedIndex == 1) {
                    	
                    	var S = r.find('.input-default-non-selected-option-text');
                    	if(S.attr('optionid') != undefined && R != null) {
                    		var b = $.removeHTMLTags(S.val()).replace(/\r/g, "");
	                    	var e = {
	                            optionId: parseInt(S.attr('optionid')),
	                            optionKindId: 2,
	                            status: "updated",
	                            text: b,
	                            value: b,
	                            isEnableAdditionalDetails: false,
	                            additionalDetailsTitle: null,
	                            orderId : 0
	                        };
	                        z.push(e);
                    	} else {
                    		var b = $.removeHTMLTags(S.val()).replace(/\r/g, "");
	                    	var e = {
	                            controlId: t,
	                            optionId: null,
	                            optionKindId: 2,
	                            status: "added",
	                            text: b,
	                            value: b,
	                            isEnableAdditionalDetails: false,
	                            additionalDetailsTitle: null,
	                            orderId : 0,
	                            opinionId: X.opinionId
	                        };
	                        z.push(e);
                    	}
                    } else {
                    	if(R != null) {
	                    	var S = r.find('.input-default-non-selected-option-text');
	                    	if(S.attr('optionid') != undefined) {
	                    		var a = {
	                                optionId: parseInt(S.attr('optionid')),
	                                status: "deleted"
	                            };
	                            A.push(a);
	                    	}
                    	}
                    }
                    
                    for (var y = 0; y < A.length; y++) {
                        z.push(A[y])
                    }
                    
                    return z
                };
                var D = function (b, c, d, e, f, g) {
                    
                	var h = $("<li class=\"option\">" + 
                			"<div class=\"row\">" +
                				"<div class=\"tab-move-option\"></div>" +
                				"<div class=\"cell\">" +
                					"<input type=\"text\" value=\"" + d + "\" autocomlete=\"off\" class=\"input-option-text\" />" +
                				"</div>" +
                				"<div class=\"cell\" style=\"margin-left: 6px;\">" +
                					"<span title=\"Remove\" class=\"button-remove-option\"></span>" +
                				"</div>" +
                			"</div>" + 
                			"<div class=\"row-choice row-additional-details-or-comments\" style=\"padding: 0 0 10px 20px; margin: 0px; display: " + (u ? "block" : "none") + "\">" +
                				"<label><span><input type=\"checkbox\" " + ((f != null) ? (f ? "checked=\"checked\"" : "") : "") + " class=\"checkbox-enable-additional-details-or-comments\" /></span>Enable \"Additional details or comments\"</label>" +
                				"<div class=\"container-additional-details-or-comments\" style=\"padding: 10px 0 0 20px; " + ((f != null) ? (f ? "display: block" : "display: none") : "display: none") + "\">" +
                					"<input type=\"text\" class=\"input-additional-details-or-comments\" value=\"" + (g != null ? g : contentDictionary.titles.title_DefaultAdditionalDetails) + "\" autocomlete=\"off\" />" +
                				"</div>" +
                			"</div>" + 
                		"</li>");
                    
                    
                    if (c != null) {
                        h.attr({
                            'optionid': c
                        })
                    }
                    h.appendTo(w);
                    
                    
                    
                    // f.find("input[type=text]:first") // .find(".input-option-text")
                    h.find("input[type=text]:first")
					.bind("keydown", function(e) {
						var code = e.keyCode || e.which;
						if (code == '9') {
							
							/*
							if (window.console) {
	           	    			window.console.log(r.find('ul.options-list li').length + "----" +  (h.index() + 1) + " ---- " + $(this).closest("li").index());
	                	    }
	                	    */
							
							// if -> h last in list create new option
							if(r.find('ul.options-list li').length == ($(this).closest("li").index() + 1)) {
								D(true, null, "", "", false, null);
								
								return false;
							}
						}
					})
                   .inputMask({ defaultValue : "Option " });
					
                    
                    /*
					h.find(".input-option-text")
                         .inputMask({ defaultValue : contentDictionary.titles.title_Option });
					*/
					
                    if (b) {
                        //h.find(".input-option-text").select().focus();
                    	h.find(".input-option-text").focus();
                    }
                    h.find('.checkbox-enable-additional-details-or-comments').unbind("change").change(function () {
                        if ($(this).is(':checked')) {
                            h.find('.container-additional-details-or-comments').show()
                        } else {
                            h.find('.container-additional-details-or-comments').hide()
                        }
                    });
                    h.find('.button-remove-option').click(function () {
                        if (h.attr('optionid') != undefined) {
                            var a = {
                                optionId: parseInt(h.attr('optionid')),
                                status: "deleted"
                            };
                            A.push(a);
                            h.remove();
                            /*
                            h.fadeOut("slow", function () {
                                $(this).remove()
                            })
                            */
                        } else {
                        	h.remove();
                            /*
                        	h.fadeOut("slow", function () {
                                $(this).remove()
                            })
                            */
                        }
                    })
                };
                var E = function (a) {
                    if (a) {
                        u = true;
                        w.find('.row-additional-details-or-comments').show()
                    } else {
                        u = false;
                        w.find('.row-additional-details-or-comments').hide()
                    }
                };
                var F = function () {
                	q.addClass('selected');
                    for (var x = 0; x < survey.controls.list.length; x++) {
                        if (survey.controls.list[x].controlId == t) {
                            z = [];
                            A = [];
                            if (lastEditableControl != null && lastEditableControl != o) {
                                lastEditableControl.find('.control-edit').hide();
                                lastEditableControl.find('.control-view').show();
                                
                                lastEditableControl.parent().removeClass('selected');
                            }
                            lastEditableControl = o;
                            r.find('.checkbox-is-mandatory').unbind('change').change(function () {});
                            
                            // link
                            var cl = r.find('.checkbox-link');
                            cl.unbind('change').change(function() {
                            	if ($(this).is(':checked')) {
                            		r.find('.editor-link').show();
                            		
                            		r.find('.select-link-type').unbind('change').change(function() {
                            			if($(this).val() == 1) {
                            				r.find('.holder-embed-code').hide();
                            				r.find('.holder-image').show();
                            				
                            				// set 
                            				if(survey.controls.list[x].link) {
                            					if(survey.controls.list[x].linkTypeId == 1)
                            						r.find('.input-image').val(survey.controls.list[x].link);
                            				}
                            			}
                            			if($(this).val() == 2) {
                            				r.find('.holder-image').hide();
                            				r.find('.holder-embed-code').show();
                            				
                            				// set
                            				if(survey.controls.list[x].link) {
                            					if(survey.controls.list[x].linkTypeId == 2)
                            						r.find('.textarea-embed-code').val(survey.controls.list[x].link);
                            				}
                            			}
                            		});
                            		
                            		var lo = r.find('.select-link-type')[0];
                            		
                            		if(survey.controls.list[x].link) {
                        				if(survey.controls.list[x].linkTypeId == 1) {
                        					lo.selectedIndex = 0;
                        					r.find('.select-link-type').change();
                        				}
                    					if(survey.controls.list[x].linkTypeId == 2) {
                        					lo.selectedIndex = 1;
                        					r.find('.select-link-type').change();
                    					}
                            					
                            		} else {
                            			lo.selectedIndex = 0;
                    					r.find('.select-link-type').change();
                            		}
                            		
                            	} else {
                            		r.find('.editor-link').hide();
                            		r.find('.input-image').val("");
                            		r.find('.textarea-embed-code').val("");
                            	}
                            	
                            });
                            
                            if(survey.controls.list[x].link) {
                            	cl.prop('checked', true).change();
                            } else {
                            	cl.prop('checked', false).change();
                            }
                            
                            r.find('.checkbox-is-enable-note').unbind('change').change(function () {
                                if ($(this).is(':checked')) {
                                    r.find('.container-note').show()
                                } else {
                                    r.find('.container-note').hide()
                                }
                            });
                            r.find('.checkbox-is-enable-comment').unbind('change').change(function () {
                                if ($(this).is(':checked')) {
                                    r.find('.container-comment').show()
                                } else {
                                    r.find('.container-comment').hide()
                                }
                            });
                            
                            r.find('.button-add-option').unbind('click').click(function (e) {
                                D(true, null, "", "", false, null)
                            });
                            
                            
                            
                            
                            /*
                            // TAB
                            r.find('.button-hidden-add-option')
	                            .unbind('focusin')
								.bind('focusin', function(e) {
									
									D(true, null, "", "", false, null);
									
                            	return false;
                            });
                            */
                            
                            // r.find('.input-content').val((survey.controls.list[x].content != "" ? survey.controls.list[x].content : contentDictionary.titles.title_Question));
                            r.find('.input-content')
	                        	.val((survey.controls.list[x].content != "" ? survey.controls.list[x].content : ""))
	                        	.inputMask({ defaultValue : contentDictionary.titles.title_Question });
                            
                            
                            if (survey.controls.list[x].isEnableNote) {
                                
                            	// r.find('.textarea-note').val(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note : contentDictionary.titles.title_Note));
                            	r.find('.textarea-note')
	                        		.val(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note : ""))
	                        		.inputMask({ defaultValue : contentDictionary.titles.title_Note });
                            	
                                r.find('.checkbox-is-enable-note')
                                 .prop('checked', survey.controls.list[x].isEnableNote);//.attr('checked', (survey.controls.list[x].isEnableNote ? 'checked' : ''));
                                r.find('.checkbox-is-enable-note').change()
                            } else {
                                
                            	// r.find('.textarea-note').val(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note : contentDictionary.titles.title_Note));
                            	r.find('.textarea-note')
	                        		.val(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note : ""))
	                        		.inputMask({ defaultValue : contentDictionary.titles.title_Note });
                                
                                r.find('.checkbox-is-enable-note')
                                 .prop('checked', survey.controls.list[x].isEnableNote); //.attr('checked', (survey.controls.list[x].isEnableNote ? 'checked' : ''));
                                r.find('.container-note').hide()
                            }
                            if (survey.controls.list[x].isMandatory) {
                                r.find('.checkbox-is-mandatory')
                                 .prop('checked', survey.controls.list[x].isMandatory);//.attr('checked', (survey.controls.list[x].isMandatory ? 'checked' : ''));
                                r.find('.checkbox-is-mandatory').change()
                            } else {
                                r.find('.checkbox-is-mandatory')
                                 .prop('checked', survey.controls.list[x].isMandatory);//.attr('checked', (survey.controls.list[x].isMandatory ? 'checked' : ''))
                            }
                            
                            
                            
                            w.empty();
                            Q = null;
                            R = null;
                            
                            if (survey.controls.list[x].options.list.length != 0) {
                            	
                                for (var i = 0; i < survey.controls.list[x].options.list.length; i++) {
                                	if(survey.controls.list[x].options.list[i].optionKindId == 2) {
                                		W(survey.controls.list[x].options.list[i]);
                                	}
                                	if(survey.controls.list[x].options.list[i].optionKindId == 0) {
                                		D(false, survey.controls.list[x].options.list[i].optionId, survey.controls.list[x].options.list[i].text, survey.controls.list[x].options.list[i].value, survey.controls.list[x].options.list[i].isEnableAdditionalDetails, survey.controls.list[x].options.list[i].additionalDetailsTitle)
                                	}
                                	if(survey.controls.list[x].options.list[i].optionKindId == 1) {
                                		O(survey.controls.list[x].options.list[i]);
                                	}
                                }
                            } else {
                                for (var i = 0; i < 2; i++) {
                                    //D(false, null, contentDictionary.titles.title_Option + " " + (i + 1), contentDictionary.titles.title_Option + " " + (i + 1), false, null)
									D(false, null, "", "", false, null)
                                }
                            }
                            if (survey.controls.list[x].isEnableComment) {
                                
								r.find('.input-comment')
									//.val(((survey.controls.list[x].comment != "" && survey.controls.list[x].comment != null) ? survey.controls.list[x].comment : "Please help us understand why you selected this answer"));
									.val(((survey.controls.list[x].comment != "" && survey.controls.list[x].comment != null) ? survey.controls.list[x].comment : ""))
									.inputMask({ defaultValue : "Please help us understand why you selected this answer" });
                                
								r.find('.checkbox-is-enable-comment')
                                 .prop('checked', survey.controls.list[x].isEnableComment);//.attr('checked', (survey.controls.list[x].isEnableComment ? 'checked' : ''));
                                r.find('.checkbox-is-enable-comment').change()
                            } else {
                                
								r.find('.input-comment')
									//.val(((survey.controls.list[x].comment != "" && survey.controls.list[x].comment != null) ? survey.controls.list[x].comment : "Please help us understand why you selected this answer"));
									.val(((survey.controls.list[x].comment != "" && survey.controls.list[x].comment != null) ? survey.controls.list[x].comment : ""))
									.inputMask({ defaultValue : "Please help us understand why you selected this answer" });
                                
								r.find('.checkbox-is-enable-comment')
                                 .prop('checked', survey.controls.list[x].isEnableComment);//.attr('checked', (survey.controls.list[x].isEnableComment ? 'checked' : ''));
                                r.find('.container-comment').hide()
                            }
                            
                            // default non selected
                            var c = r.find('.container-default-non-selected-option-text');
                            r.find('.dropdown-input-type').unbind('change').change(function () {
                                var a = ($(this)[0].selectedIndex != undefined ? $(this)[0].selectedIndex : 0);
                                if (a == 1) {
                                    c.show()
                                    var S = r.find('.input-default-non-selected-option-text');
                                    if(S.val().length == 0) {
                                    	S.val(contentDictionary.titles.title_DefaultNoneSelectedOption);
                                    }
                                    if(R == null) {
                                    	S.val(contentDictionary.titles.title_DefaultNoneSelectedOption);
                                    	S.removeAttr('optionid');
                                    }
                                } else {
                                    c.hide()
                                }
                                if (a == 2) {
                                    E(true)
                                } else {
                                    E(false)
                                }
                            });
                            
                            // other
                            r.find('.checkbox-is-enable-other').unbind('change').change(function () {
                                if ($(this).is(':checked')) {
                                    d.show()
                                    var l = r.find('.input-other-title');
                                	if(l.val().length == 0) {
                                		l.val(contentDictionary.titles.title_Other);
                                	}
                                	if(Q == null) {
                                		l.val(contentDictionary.titles.title_Other);
                                		l.removeAttr('optionid');
                                	}
                                } else {
                                    d.hide()
                                }
                            });
                            
                            
                            
                            var e = r.find('.dropdown-input-type')[0];
                            if (survey.controls.list[x].inputTypeId != 0) {
                                e.selectedIndex = survey.controls.list[x].inputTypeId;
                                if (survey.controls.list[x].inputTypeId == 1) {
                                    c.show()
                                } else {
                                    c.hide()
                                }
                                if (survey.controls.list[x].inputTypeId == 2) {
                                    E(true)
                                } else {
                                    E(false)
                                }
                            } else {
                                e.selectedIndex = survey.controls.list[x].inputTypeId
                            }
                            
                            r.find('.save-control-button').unbind("click").click(function () {
                                
                            	survey.controls.list[x].content = r.find('.input-content').val();
                                survey.controls.list[x].isEnableNote = r.find('.checkbox-is-enable-note').is(':checked');
                                survey.controls.list[x].note = r.find('.textarea-note').val();
                                survey.controls.list[x].isMandatory = r.find('.checkbox-is-mandatory').is(':checked');
                                
                                if(r.find('.checkbox-link').is(':checked')) {
                                	if(r.find('.select-link-type').val() == 1) {
                                		// link to image
                                		if(r.find('.input-image').val() != "") {
                                			survey.controls.list[x].linkTypeId = 1;
                                			survey.controls.list[x].link = r.find('.input-image').val();
                                		} else {
                                			survey.controls.list[x].linkTypeId = 0;
                                			survey.controls.list[x].link = null;
                                		}
                                	}
                                	
                                	if(r.find('.select-link-type').val() == 2) {
                                		// embed code
                                		if(r.find('.textarea-embed-code').val() != "") {
                                			survey.controls.list[x].linkTypeId = 2;
                                			survey.controls.list[x].link = r.find('.textarea-embed-code').val();
                                		} else {
                                			survey.controls.list[x].linkTypeId = 0;
                                			survey.controls.list[x].link = null;
                                		}
                                	}
                                } else {
                                	survey.controls.list[x].linkTypeId = 0;
                        			survey.controls.list[x].link = null;
                                }
                                
                                survey.controls.list[x].inputTypeId = e.selectedIndex;
								 
								survey.controls.list[x].isEnableComment = r.find('.checkbox-is-enable-comment').is(':checked');
                                survey.controls.list[x].comment = r.find('.input-comment').val();
								
                                survey.controls.list[x].options = {
                                    list: C(),
                                    reorder: B()
                                }
                                var b = {
                                    controlId: survey.controls.list[x].controlId
                                };
                                
                                X.onSave(b, function (a) {
                                    G()
                                });
                            });
                            r.find('.cancel-control-button').unbind("click").click(function () {
                                G()
                            });
                            s.hide();
                            
                            
                            r.show();
                            
                            
                            // default select
                            //r.find('.input-content').select();
                            
                            break
                        }
                    }
                };
                
                var lR = function() {
                	
                	// default select
                	//r.find('.input-content').select();
                	
                	if(link) {
                    	
                    	// image
                    	if(linkTypeId == 1) {
                    		s.find('.container-embed-code')
                    			.html("<img src=" + link + " />")
                    			.show();
                    	}
                    	
                    	// embed code
                    	if(linkTypeId == 2) {
                        	s.find('.container-embed-code')
                    			.html(link)
                    			.show();
                    	}
                    }
                	
                	
                };
                
                var G = function () {
                	
                	
                	
                	q.removeClass('selected');
                    for (var x = 0; x < survey.controls.list.length; x++) {
                        if (survey.controls.list[x].controlId == t) {
                            s.show();
                            r.hide();
                            s.find('.label-content').html(survey.controls.list[x].content.replace(/\n/g, "<br/>"));
                            if (survey.controls.list[x].isMandatory) {
                                s.find('.label-mandatory').show()
                            } else {
                                s.find('.label-mandatory').hide()
                            }
                            
                            // link - view
                            if(survey.controls.list[x].link) {
                            	link = survey.controls.list[x].link;
                            	linkTypeId = survey.controls.list[x].linkTypeId;
                            	lR();
                            } else {
                            	s.find('.container-embed-code')
                            		.empty()
                            		.hide();
                            }
                            
                            if (survey.controls.list[x].isEnableNote) {
                                s.find('.label-note').html((survey.controls.list[x].note != "" ? survey.controls.list[x].note.replace(/\n/gi, "<br/>").replace(/%0A/gi, "<br/>") : contentDictionary.titles.title_Note)).show()
                            } else {
                                s.find('.label-note').hide()
                            }
                            if (survey.controls.list[x].isEnableComment) {
                                s.find('.container-comment-field').show();
                                s.find('.label-comment').text(survey.controls.list[x].comment);
                                s.find('.textarea-comment').text()
                            } else {
                                s.find('.container-comment-field').hide();
                                s.find('.label-comment').text(contentDictionary.titles.title_Comment);
                                s.find('.textarea-comment').text()
                            }
                            
                            var includes = s.find(".container-control-includes");
                            includes.empty();
                            var c = s.find('.container-control-other');
                            c.empty();
                            
                            var d = $("<div><select class=\"dropdown-" + survey.controls.list[x].controlId + "\"></select></div>");
                            var e = d.find(".dropdown-" + survey.controls.list[x].controlId)[0].options;
                            switch (survey.controls.list[x].inputTypeId) {
                            case 0:
                                {
                                    if (survey.controls.list[x].options.list.length != 0) {
                                        var P = null;
                                    	for (var i = 0; i < survey.controls.list[x].options.list.length; i++) {
                                            if(survey.controls.list[x].options.list[i].optionKindId == 0) {
												var f = $("<li class=\"choice\"><label><span><input type=\"radio\" name=\"" + survey.controls.list[x].controlId + "\" /></span>" + survey.controls.list[x].options.list[i].text + "</label></li>");
                                            	f.appendTo(includes);
                                            }
                                            if(survey.controls.list[x].options.list[i].optionKindId == 1) {
                                            	P = survey.controls.list[x].options.list[i];
                                            }
                                        }
                                    	
                                    	// Append other in the end
                                    	if(P != null) {
                                    		var g = $("<div class=\"choice-other\">" +
                                    				"<label><span><input type=\"radio\" class=\"radio-other\" name=\"" + survey.controls.list[x].controlId + "\" /></span>" + ((P.text != "" && P.text != null) ? P.text : contentDictionary.titles.title_Other) + "</label>" +
                                    				"<div class=\"container-other\">" +
                                    					"<input type=\"text\" class=\"text-field\" />" +
                                    				"</div>" +
                                    			"</div>");
                                            
                                    		
                                    		
                                    		g.appendTo(c);
                                            var h = g.find('.radio-other');
                                            var j = g.find('.text-field');
                                            h.unbind("change").change(function () {
                                                if ($(this).is(':checked')) {
                                                    j.focus()
                                                }
                                            });
                                            j.unbind("focusin").focusin(function () {
                                                if (!h.is(':checked')) {
                                                    h.prop('checked', true)
                                                }
                                            });
                                    	}
                                    	
                                    } else {
                                        for (var i = 0; i < 2; i++) {
                                            var f = $("<li class=\"choice\"><label><span><input type=\"radio\" name=\"" + survey.controls.list[x].controlId + "\" /></span>" + contentDictionary.titles.title_Option + " " + (i + 1) + "</label></li>");
                                            
                                            
                                            f.appendTo(includes)
                                        }
                                    }
                                    
                                    break
                                }
                            case 1:
                                {
                                	
                                    if (survey.controls.list[x].options.list.length != 0) {
                                        
                                    	var R = null;
                                    	var P = null;
                                    	var Y = [];
                                    	
                                        for (var i = 0; i < survey.controls.list[x].options.list.length; i++) {
                                        	if(survey.controls.list[x].options.list[i].optionKindId == 2) {
                                        		R = survey.controls.list[x].options.list[i];
                                        	}
                                        	if(survey.controls.list[x].options.list[i].optionKindId == 0) {
	                                        	Y.push(survey.controls.list[x].options.list[i]);
                                        	}
                                        	if(survey.controls.list[x].options.list[i].optionKindId == 1) {
                                            	P = survey.controls.list[x].options.list[i];
                                            }
                                        }
                                        d.appendTo(c);
                                        
                                        // Append default
                                        if(R != null) {
                                        	var k = new Option((R.text != null ? R.text : contentDictionary.titles.title_DefaultNoneSelectedOption), 0);
                                            try {
                                                e.add(k)
                                            } catch (ex) {
                                                e.add(k, null)
                                            }
                                        }
                                        
                                        // Append all other options
                                        if(Y.length != 0) {
                                        	for(var z = 0; z < Y.length; z++) {
                                        		var l = new Option(Y[z].text, Y[z].optionId);
	                                            try {
	                                                e.add(l)
	                                            } catch (ex) {
	                                                e.add(l, null)
	                                            }
                                        	}
                                        }
                                        
                                        
                                        /*
                                        
                                        // Append other in the end
                                        if(P != null) {
                                        	var g = $("<div class=\"row\"><div class=\"cell\">" + ((P.text != "" && P.text != null) ? P.text : contentDictionary.titles.title_Other) + "</div><div class=\"cell\" style=\"margin-left: 12px;\"><input type=\"text\" class=\"text-field\" /></div></div>");
                                            g.appendTo(c);
                                        }
                                        
                                        */
                                        
                                        
                                    } else {
                                        var k = new Option((survey.controls.list[x].defaultNonSelectedOptionText != null ? survey.controls.list[x].defaultNonSelectedOptionText : contentDictionary.titles.title_DefaultNoneSelectedOption), 0);
                                        try {
                                            e.add(k)
                                        } catch (ex) {
                                            e.add(k, null)
                                        }
                                        for (var i = 0; i < 2; i++) {
                                            var l = new Option(contentDictionary.titles.title_Option + " " + (i + 1), i);
                                            try {
                                                e.add(l)
                                            } catch (ex) {
                                                e.add(l, null)
                                            }
                                        }
                                        d.appendTo(c)
                                    }
                                    
                                    break
                                }
                            case 2:
                                {
                                    if (survey.controls.list[x].options.list.length != 0) {
                                        var P = null;
                                    	for (var i = 0; i < survey.controls.list[x].options.list.length; i++) {
                                        	if(survey.controls.list[x].options.list[i].optionKindId == 0) {
	                                        	var m = $("<li class=\"choice\"><label><span><input type=\"checkbox\" class=\"checkbox-" + survey.controls.list[x].options.list[i].optionId + "\" id=\"" + survey.controls.list[x].options.list[i].optionId + "\" /></span>" + survey.controls.list[x].options.list[i].text + "</label></li>");
	                                            if ((survey.controls.list[x].options.list[i].isEnableAdditionalDetails != null ? (survey.controls.list[x].options.list[i].isEnableAdditionalDetails ? true : false) : false)) {
	                                                var n = $("<div style=\"display: none;\" class=\"container-additional-details-or-comments container-additional-details-or-comments-" + survey.controls.list[x].options.list[i].optionId + "\"><div class=\"q-label\">" + (survey.controls.list[x].options.list[i].additionalDetailsTitle != null ? survey.controls.list[x].options.list[i].additionalDetailsTitle : contentDictionary.titles.title_DefaultAdditionalDetails) + "</div><div><input type=\"text\" class=\"text-field input-additional-details-or-comments\" /></div></div>");
	                                                m.append(n);
	                                                m.find('.checkbox-' + survey.controls.list[x].options.list[i].optionId).unbind('change').change(function () {
	                                                    var a = $('.container-additional-details-or-comments-' + $(this).attr('id'));
	                                                    if ($(this).is(':checked')) {
	                                                        a.show();
	                                                        var b = a.find('.input-additional-details-or-comments');
	                                                        b.focus()
	                                                    } else {
	                                                        a.hide()
	                                                    }
	                                                })
	                                            }
	                                            m.appendTo(includes);
                                        	}
                                        	if(survey.controls.list[x].options.list[i].optionKindId == 1) {
                                            	P = survey.controls.list[x].options.list[i];
                                            }
                                        }
                                    	
                                    	// Append other in the end
                                    	if(P != null) {
                                    		var g = $("<div class=\"choice-other\">" +
                                				"<label><span><input type=\"checkbox\" class=\"checkbox-other\"/></span>" + ((P.text != "" && P.text != null) ? P.text : contentDictionary.titles.title_Other) + "</label>" +
                                				"<div class=\"container-other\">" +
                                					"<input type=\"text\" class=\"text-field\" />" +
                                				"</div>" +
                                    		"</div>");
                                            
                                    		
                                    		
                                    		g.appendTo(c);
                                            var o = g.find('.checkbox-other');
                                            var j = g.find('.text-field');
                                            o.unbind("change").change(function () {
                                                if ($(this).is(':checked')) {
                                                    j.focus()
                                                }
                                            });
                                            j.unbind("focusin").focusin(function () {
                                                if (!o.is(':checked')) {
                                                    o.prop('checked', true)
                                                }
                                            })
                                    	}
                                    	
                                    } else {
                                        for (var i = 0; i < 2; i++) {
                                            var m = $("<li class=\"choice\"><label><span><input type=\"checkbox\" /></span>" + contentDictionary.titles.title_Option + " " + (i + 1) + "</label></li>");
                                            
                                            
                                            m.appendTo(includes)
                                        }
                                    }
                                    
                                    break
                                }
                            }
                            break
                        }
                    }
                };
                
                /*
                o.find('.right-side').hover(function() {
                	s.find('.control-panel').show();
                }, function() {
                	s.find('.control-panel').hide();
                });
                */
                
                s.find('.control-panel a.edit-control-button').click(function () {
                    F();
                });
                s.find('.control-panel a.copy-control-button').click(function () {
                    var a = {
                        element: v,
                        controlId: t,
                        orderId: parseInt(v.attr("orderid"))
                    };
                    X.onCopy(a)
                });
                /*
                s.find('.control-panel a.transfer-control-button').click(function () {
                    alert("TRANSFER")
                });
                */
                s.find('.control-panel a.delete-control-button').click(function () {
                    var a = {
                        element: v,
                        controlId: t
                    };
                    X.onDelete(a)
                });
                
                
                q.appendTo(v);
                
                
                
                G();
                
                if (X.isEditable) {
                    F();
                }
                
                lR();
                
                
                break
            }
        case 3:
            {
                var o = $("<div class=\"control-container\">" + 
        		"<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">" +
    				"<tr>" +
		    			"<td valign=\"top\" class=\"left-side\">" +
							"<div class=\"tab-move-control\"></div>" +
						"</td>" +
						/*"<td style=\"width:1%\" valign=\"top\"><span class=\"number\"></span>.&nbsp;</td>" +*/
        				"<td valign=\"top\" class=\"right-side\">" +
            				"<div class=\"control-edit ui-form\" style=\"display: none\">" +             					
	                			"<div class=\"row\" style=\"height: 52px;\">" + 
	                				"<div class=\"cell\"><span class=\"label-edit-control-number\"></span>.&nbsp;</div>" +
	                				"<div class=\"cell\"><textarea style=\"width: 304px; height: 47px;\" class=\"input-content\" maxlength=\"1000\"></textarea></div>" + 
	                			"</div>" +
	                			
	                			"<div class=\"row-choice\">" +
	                				"<label><span><input type=\"checkbox\" class=\"checkbox-is-mandatory\" /></span>Required question</label>" +
	                			"</div>" +
	                			"<div class=\"row-choice\">" +
	                				"<label><span><input type=\"checkbox\" class=\"checkbox-link\" /></span>Add Image/Embed Code</label>" +
	                				"<div class=\"editor-link\" style=\"display: none; padding: 10px 0px 0px 20px;\">" +
		                				"<div>" +
		                					"<select class=\"select-link-type\"><option value=\"1\">Link to Image</option><option value=\"2\">Embed Code</option></select>" +
		                				"</div>" +
	            						"<div class=\"holder-image\" style=\"display: none; overflow: hidden;\">" +
	            							"<input class=\"input-image\" type=\"text\" style=\"width: 284px\" />" +
	            						"</div>" +
	            						"<div class=\"holder-embed-code\" style=\"display: none; overflow: hidden;\">" +
	            							"<textarea class=\"textarea-embed-code\" style=\"width: 284px; height: 47px;\" autocomplete=\"off\"></textarea>" +
	            						"</div>" +
	        						"</div>" +
	                			"</div>" +
	                			"<div class=\"row-choice\">" + 
	                				"<label><span><input type=\"checkbox\" class=\"checkbox-is-enable-note\" /></span>Help text</label>" +
	                				"<div class=\"container-note\" style=\"display: none; height: 52px; padding: 10px 0px 0px 20px;\">" + 
	                					"<textarea style=\"width: 284px; height: 47px;\" class=\"textarea-note\"></textarea>" + 
	                				"</div>" +
	                			"</div>" +
	                			
	                			"<div>" + 
    								"<h2>Display Options:</h2>" + 
    								"<div class=\"row\">" + 
    									"<div class=\"cell\" style=\"width: 130px;\">Answer field type:</div><div class=\"cell\"><select class=\"dropdown-input-type\"><option value=\"0\">Single Line</option><option value=\"1\">Multi Line</option><option value=\"2\">Password</option></select></div>" + 
    								"</div>" + 
    								"<h2  style=\"display: none\">Options:</h2>" + 
    								"<div class=\"row\" style=\"display: none\">" + 
    									"<div class=\"cell\" style=\"width: 130px;\">Answer field size:</div><div class=\"cell\"><select class=\"dropdown-input-type\"><option value=\"0\">Small</option><option value=\"1\">Medium</option><option value=\"2\">Large</option></select></div>" + 
    								"</div>" + 
	                			"</div>" + 
	                			"<div class=\"row\">" + 
	                				"<div class=\"cell\"><a href=\"javascript:;\" title=\"Done Editing\" class=\"button-blue save-control-button\"><span>Done Editing</span></a></div><div class=\"cell\" style=\"padding-left: 8px; line-height: 21px;\"><a href=\"javascript:;\" title=\"Cancel\" class=\"cancel-control-button\">Cancel</a></div>" + 
	                			"</div>" + 
	                		"</div>" + 
	                		"<div class=\"control-view demo-question\">" + 
	                			"<div class=\"control-panel\"><a href=\"javascript:;\" class=\"edit-control-button button-white\" tag=\"edit\" title=\"Edit\"><span>Edit</span></a>&nbsp;<a href=\"javascript:;\" class=\"copy-control-button button-white\" tag=\"copy\" title=\"Copy\"><span>Copy</span></a>&nbsp;<a href=\"javascript:;\" class=\"delete-control-button\" tag=\"delete\" title=\"Delete\"><span>Delete</span></a></div>" + 
	                			"<div class=\"demo-question-heading\">" +
	                				"<span class=\"number\"></span>.&nbsp;" +
	                				"<span class=\"label-mandatory\" style=\"display: none;\">*&nbsp;</span>" +
	                				"<span class=\"label-content\">Enter your question here.</span>" +
	                			"</div>" +
	                			"<div class=\"demo-question-content\">" +
		                			"<div class=\"container-embed-code q-image\" style=\"display: none\"></div>" +
		                			"<div class=\"label-note q-help\" style=\"display: none;\">You can enter some information about this question here.</div>" +
		                			"<ul class=\"container-control-includes\"></ul>" +
		                			"<div class=\"container-control-other\"></div>" +
	                			"</div>" +
	                		"</div>" +
        				"</td>" +
        			"</tr>" +
    			"</table>" +
    			"</div>");
                
                
                var c = q; //.find('.form-center:first');
                o.appendTo(c);
                
                var link = null;
                var linkTypeId = 0;
                
                var r = o.find('.control-edit');
                var s = o.find('.control-view');
                var t = X.controlId;
                var F = function () {
                	q.addClass('selected');
                    for (var x = 0; x < survey.controls.list.length; x++) {
                        if (survey.controls.list[x].controlId == t) {
                        	
                            if (lastEditableControl != null && lastEditableControl != o) {
                                lastEditableControl.find('.control-edit').hide();
                                lastEditableControl.find('.control-view').show();
                                
                                lastEditableControl.parent().removeClass('selected');
                            }
                            lastEditableControl = o;
                            r.show();
                            s.hide();
                            
                            // r.find('.input-content').text((survey.controls.list[x].content != "" ? survey.controls.list[x].content : contentDictionary.titles.title_Question));
                            r.find('.input-content')
                            	.text((survey.controls.list[x].content != "" ? survey.controls.list[x].content : ""))
                            	.inputMask({ defaultValue : contentDictionary.titles.title_Question });
                            
                            r.find('.checkbox-is-mandatory').unbind('change').change(function () {});
                            
                            // link
                            var cl = r.find('.checkbox-link');
                            cl.unbind('change').change(function() {
                            	if ($(this).is(':checked')) {
                            		r.find('.editor-link').show();
                            		
                            		r.find('.select-link-type').unbind('change').change(function() {
                            			if($(this).val() == 1) {
                            				r.find('.holder-embed-code').hide();
                            				r.find('.holder-image').show();
                            				
                            				// set 
                            				if(survey.controls.list[x].link) {
                            					if(survey.controls.list[x].linkTypeId == 1)
                            						r.find('.input-image').val(survey.controls.list[x].link);
                            				}
                            			}
                            			if($(this).val() == 2) {
                            				r.find('.holder-image').hide();
                            				r.find('.holder-embed-code').show();
                            				
                            				// set
                            				if(survey.controls.list[x].link) {
                            					if(survey.controls.list[x].linkTypeId == 2)
                            						r.find('.textarea-embed-code').val(survey.controls.list[x].link);
                            				}
                            			}
                            		});
                            		
                            		var lo = r.find('.select-link-type')[0];
                            		
                            		if(survey.controls.list[x].link) {
                        				if(survey.controls.list[x].linkTypeId == 1) {
                        					lo.selectedIndex = 0;
                        					r.find('.select-link-type').change();
                        				}
                    					if(survey.controls.list[x].linkTypeId == 2) {
                        					lo.selectedIndex = 1;
                        					r.find('.select-link-type').change();
                    					}
                            					
                            		} else {
                            			lo.selectedIndex = 0;
                    					r.find('.select-link-type').change();
                            		}
                            		
                            	} else {
                            		r.find('.editor-link').hide();
                            		r.find('.input-image').val("");
                            		r.find('.textarea-embed-code').val("");
                            	}
                            	
                            });
                            
                            if(survey.controls.list[x].link) {
                            	cl.prop('checked', true).change();
                            } else {
                            	cl.prop('checked', false).change();
                            }
                            
                            r.find('.checkbox-is-enable-note').unbind('change').change(function () {
                                if ($(this).is(':checked')) {
                                    r.find('.container-note').show()
                                } else {
                                    r.find('.container-note').hide()
                                }
                            });
                            if (survey.controls.list[x].isEnableNote) {
                                
                            	// r.find('.textarea-note').val(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note : contentDictionary.titles.title_Note));
                            	r.find('.textarea-note')
                            		.val(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note : ""))
                            		.inputMask({ defaultValue : contentDictionary.titles.title_Note });
                                
                                r.find('.checkbox-is-enable-note')
                                 .prop('checked', survey.controls.list[x].isEnableNote);//.attr('checked', (survey.controls.list[x].isEnableNote ? 'checked' : ''));
                                r.find('.checkbox-is-enable-note').change()
                            } else {
                            	
                                // r.find('.textarea-note').val(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note : contentDictionary.titles.title_Note));
                            	r.find('.textarea-note')
	                        		.val(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note : ""))
	                        		.inputMask({ defaultValue : contentDictionary.titles.title_Note });
                            	
                                r.find('.checkbox-is-enable-note')
                                 .prop('checked', survey.controls.list[x].isEnableNote); //.attr('checked', (survey.controls.list[x].isEnableNote ? 'checked' : ''));
                                r.find('.container-note').hide()
                            }
                            if (survey.controls.list[x].isMandatory) {
                                r.find('.checkbox-is-mandatory')
                                 .prop('checked', survey.controls.list[x].isMandatory); //.attr('checked', (survey.controls.list[x].isMandatory ? 'checked' : ''));
                                r.find('.checkbox-is-mandatory').change()
                            } else {
                                r.find('.checkbox-is-mandatory')
                                 .prop('checked', survey.controls.list[x].isMandatory); //.attr('checked', (survey.controls.list[x].isMandatory ? 'checked' : ''))
                            }
                            var c = r.find('.dropdown-input-type')[0];
                            if (survey.controls.list[x].inputTypeId != 0) {
                                c.selectedIndex = survey.controls.list[x].inputTypeId
                            } else {
                                c.selectedIndex = survey.controls.list[x].inputTypeId
                            }
                            r.find('.save-control-button').unbind("click").click(function () {
                                survey.controls.list[x].content = r.find('.input-content').val();
                                survey.controls.list[x].isEnableNote = r.find('.checkbox-is-enable-note').is(':checked');
                                survey.controls.list[x].note = r.find('.textarea-note').val();
                                survey.controls.list[x].isMandatory = r.find('.checkbox-is-mandatory').is(':checked');
                                
                                if(r.find('.checkbox-link').is(':checked')) {
                                	if(r.find('.select-link-type').val() == 1) {
                                		// link to image
                                		if(r.find('.input-image').val() != "") {
                                			survey.controls.list[x].linkTypeId = 1;
                                			survey.controls.list[x].link = r.find('.input-image').val();
                                		} else {
                                			survey.controls.list[x].linkTypeId = 0;
                                			survey.controls.list[x].link = null;
                                		}
                                	}
                                	
                                	if(r.find('.select-link-type').val() == 2) {
                                		// embed code
                                		if(r.find('.textarea-embed-code').val() != "") {
                                			survey.controls.list[x].linkTypeId = 2;
                                			survey.controls.list[x].link = r.find('.textarea-embed-code').val();
                                		} else {
                                			survey.controls.list[x].linkTypeId = 0;
                                			survey.controls.list[x].link = null;
                                		}
                                	}
                                } else {
                                	survey.controls.list[x].linkTypeId = 0;
                        			survey.controls.list[x].link = null;
                                }
                                
                                survey.controls.list[x].inputTypeId = c.selectedIndex, survey.controls.list[x].inputSizeTypeId = 1;
                                var b = {
                                    controlId: survey.controls.list[x].controlId
                                };
                                X.onSave(b, function (a) {
                                    G()
                                })
                            });
                            r.find('.cancel-control-button').unbind("click").click(function () {
                                G()
                            });
                            
                            
                            // default select
                            //r.find('.input-content').select();
                            
                            break
                        }
                    }
                };
                
                var lR = function() {
                	
                	// default select
                    //r.find('.input-content').select();
                	
                	if(link) {
                    	
                    	// image
                    	if(linkTypeId == 1) {
                    		s.find('.container-embed-code')
                    			.html("<img src=" + link + " />")
                    			.show();
                    	}
                    	
                    	// embed code
                    	if(linkTypeId == 2) {
                        	s.find('.container-embed-code')
                    			.html(link)
                    			.show();
                    	}
                    }
                };
                
                var G = function () {
                	q.removeClass('selected');
                    for (var x = 0; x < survey.controls.list.length; x++) {
                        if (survey.controls.list[x].controlId == t) {
                            r.hide();
                            s.show();
                            s.find('.label-content').html(survey.controls.list[x].content.replace(/\n/g, "<br/>"));//.text(survey.controls.list[x].content);
                            if (survey.controls.list[x].isMandatory) {
                                s.find('.label-mandatory').show()
                            } else {
                                s.find('.label-mandatory').hide()
                            }
                            
                            // link - view
                            if(survey.controls.list[x].link) {
                            	link = survey.controls.list[x].link;
                            	linkTypeId = survey.controls.list[x].linkTypeId;
                            	lR();
                            } else {
                            	s.find('.container-embed-code')
                            		.empty()
                            		.hide();
                            }
                            
                            if (survey.controls.list[x].isEnableNote) {
                                s.find('.label-note').html(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note.replace(/\n/gi, "<br/>").replace(/%0A/gi, "<br/>") : contentDictionary.titles.title_Note)).show()
                            } else {
                                s.find('.label-note').hide()
                            }
                            var a = s.find('.container-control-other');
                            a.empty();
                            switch (survey.controls.list[x].inputTypeId) {
                            case 0:
                                {
                                    a.append("<div><input type=\"text\" class=\"input-single-line-field\" /></div>");
                                    break
                                }
                            case 1:
                                {
                                    a.append("<div><textarea class=\"textarea-multi-line-field\"></textarea></div>");
                                    break
                                }
                            case 2:
                                {
                                    a.append("<div><input type=\"password\" class=\"input-password-field\" value=\"******\" /></div>");
                                    break
                                }
                            }
                            break
                        }
                    }
                }
                
                /*
                o.find('.right-side').hover(function() {
                	s.find('.control-panel').show();
                }, function() {
                	s.find('.control-panel').hide();
                });
                */
                
                s.find('.control-panel a.edit-control-button').click(function () {
                    F()
                });
                s.find('.control-panel a.copy-control-button').click(function () {
                    var a = {
                        element: v,
                        controlId: t,
                        orderId: parseInt(v.attr("orderid"))
                    };
                    X.onCopy(a)
                });
                /*
                s.find('.control-panel a.transfer-control-button').click(function () {
                    alert("TRANSFER")
                });
                */
                s.find('.control-panel a.delete-control-button').click(function () {
                    var a = {
                        element: v,
                        controlId: t
                    };
                    X.onDelete(a)
                });
                
                
                /*
                if (X.isEditable) {
                    F()
                } else {
                    G()
                }
                */
                
                q.appendTo(v);
                
                G();
                
                if (X.isEditable) {
                    F();
                }
                
                lR();


                break;
            }
        case 4:
            {
            	
                var o = $("<div class=\"control-container\">" +
        		"<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">" +
    				"<tr>" +
		    			"<td valign=\"top\" class=\"left-side\">" +
							"<div class=\"tab-move-control\"></div>" +
						"</td>" +
						/*"<td style=\"width:1%\" valign=\"top\"><span class=\"number\"></span>.&nbsp;</td>" +*/
        				"<td valign=\"top\" class=\"right-side\">" +
	        				"<div class=\"control-edit ui-form\" style=\"display: none;\">" +
		            			"<div class=\"row\" style=\"height: 52px;\">" +
		            				"<div class=\"cell\"><span class=\"label-edit-control-number\"></span>.&nbsp;</div>" +
		            				"<div class=\"cell\"><textarea style=\"width: 304px; height: 47px;\" autocomplete=\"off\" class=\"input-content\" maxlength=\"1000\"></textarea></div>" +
		            			"</div>" +
		            			
		            			"<div class=\"row-choice\">" +
		            				"<label><span><input type=\"checkbox\" class=\"checkbox-is-mandatory\" /></span>Required question</label>" +
		            			"</div>" +
		            			"<div class=\"row-choice\">" +
	                				"<label><span><input type=\"checkbox\" class=\"checkbox-link\" /></span>Add Image/Embed Code</label>" +
	                				"<div class=\"editor-link\" style=\"display: none; padding: 10px 0px 0px 20px;\">" +
		                				"<div>" +
		                					"<select class=\"select-link-type\"><option value=\"1\">Link to Image</option><option value=\"2\">Embed Code</option></select>" +
		                				"</div>" +
	            						"<div class=\"holder-image\" style=\"display: none; overflow: hidden;\">" +
	            							"<input class=\"input-image\" type=\"text\" style=\"width: 284px\" />" +
	            						"</div>" +
	            						"<div class=\"holder-embed-code\" style=\"display: none; overflow: hidden;\">" +
	            							"<textarea class=\"textarea-embed-code\" style=\"width: 284px; height: 47px;\" autocomplete=\"off\"></textarea>" +
	            						"</div>" +
	        						"</div>" +
	                			"</div>" +
		            			"<div class=\"row-choice\">" +
		            				"<label><span><input type=\"checkbox\" class=\"checkbox-is-enable-note\" /></span>Help text</label>" +
		            				"<div class=\"container-note\" style=\"display: none; height: 52px; padding: 10px 0px 0px 20px;\">" +
		            					"<textarea style=\"width: 284px; height: 47px;\" autocomplete=\"off\" class=\"textarea-note\"></textarea>" +
		            				"</div>" +
		            			"</div>" +
								
		            			
		            			"<div>" +
		            				"<div>" +
		            					"<table cellpadding=\"0\" cellspacing=\"0\" width=\"100%\">" +
		            						"<tr>" +
		            							"<td valign=\"top\" style=\"width: 50%\">" +
		            								"<b>Row choices</b>" +
		            								"<ul class=\"sub-controls-list\" style=\"list-style: none outside none; padding: 0px; margin: 0px; padding-top: 4px;\"></ul>" +
		            								"<div style=\"padding-left: 20px;clear: both;\"><a href=\"javascript:;\" title=\"Add row choice...\" class=\"button-add-sub-control\">Add row choice...</a></div>" +
		            							"</td>" +
		            							"<td valign=\"top\" style=\"width: 50%\">" +
		            								"<div>" +
		            									"<b>Column choices</b>" +
		            									"<select>" +
		            										"<option>Pre-defined list</option>" +
		            										"<optgroup label=\"Scaling\">" +
		            											"<option value=\"Strongly Disagree,Disagree,Agree,Strongly Agree\">Agree/Disagree</option>" +
		            											"<option value=\"Very Fair,Fair,Good,Very Good\">Good/Poor</option>" +
		            											"<option value=\"Very Easy,Easy,Okay,Hard,Very Hard\">Easy/Hard</option>" +
		            										"</optgroup>" +
		            									"</select>" +
		            								"</div>" +
		            								"<ul class=\"options-list\" style=\"list-style: none outside none; padding: 0px; margin: 0px; padding-top: 4px\"></ul>" +
		            								"<div style=\"padding-left: 20px;clear: both;\"><a href=\"javascript:;\" title=\"Add column choice...\" class=\"button-add-option\">Add column choice...</a></div>" +
		            							"</td>" +
		            						"</tr>" +
		            					"</table>" +
		            				"</div>" +
		            			"</div>" +
		            			
		            			"<div>" +
		            				
    								"<h2>Display Options:</h2>" +
    								"<div class=\"row\">" +
    									"<div class=\"cell\" style=\"width: 130px;\">Options Types:</div><div class=\"cell\"><select class=\"dropdown-input-type\"><option value=\"0\">Single (choice one answer per row)</option><option value=\"1\">Multiple (choice multiple answers per row)</option></select></div>" +
    								"</div>" +
		            							
		            			"</div>" +
		            			"<div class=\"row\">" +
		            				"<div class=\"cell\"><a href=\"javascript:;\" title=\"Done Editing\" class=\"button-blue save-control-button\"><span>Done Editing</span></a></div><div class=\"cell\" style=\"padding-left: 8px; line-height: 21px;\"><a href=\"javascript:;\" title=\"Cancel\" class=\"cancel-control-button\">Cancel</a></div>" +
		            			"</div>" +
		            		"</div>" +
		            		"<div class=\"control-view demo-question\">" +
		            			"<div class=\"control-panel\"><a href=\"javascript:;\" class=\"edit-control-button button-white\" tag=\"edit\" title=\"Edit\"><span>Edit</span></a>&nbsp;<a href=\"javascript:;\" class=\"copy-control-button button-white\" tag=\"copy\" title=\"Copy\"><span>Copy</span></a>&nbsp;<a href=\"javascript:;\" class=\"delete-control-button\" tag=\"delete\" title=\"Delete\"><span>Delete</span></a></div>" +
		            			
		            			"<div class=\"demo-question-heading\">" +
		            				"<span class=\"number\"></span>.&nbsp;" +
		            				"<span class=\"label-mandatory\" style=\"display: none;\">*&nbsp;</span>" +
		            				"<span class=\"label-content\">Enter your question here.</span>" +
		            			"</div>" +
		            			"<div class=\"demo-question-content\">" +
			            			"<div class=\"container-embed-code q-image\" style=\"display: none\"></div>" +
			            			"<div class=\"label-note q-help\" style=\"display: none;\">You can enter some information about this question here.</div>" +
			            			"<ul class=\"container-control-includes\"></ul>" +
			            			"<div class=\"container-control-other\"></div>" +
		            			"</div>" +
		            		"</div>" +
        				"</td>" +
    				"</tr>" +
    			"</table>" +
    			"</div>");
                
                
                var c = q; //.find('.form-center:first');
                o.appendTo(c);
                
                var link = null;
                var linkTypeId = 0;
                
                var r = o.find('.control-edit');
                var s = o.find('.control-view');
                var t = X.controlId;
                var H = "Row choice";
                var I = "Column choice";
                var w = null;
                w = r.find('ul.options-list');
                //w.sortable("destroy");
                w.sortable({
                    placeholder: "options-list-drag",
                    handle: ".tab-move-option",
                    opacity: 0.7,
                    axis: "y",
                    cursor: "pointer",
                    scroll: true
                });
                var z = [];
                var A = [];
                var B = function () {
                    var b = [];
                    w.children().each(function (i, a) {
                        if ($(a).attr("optionid") != undefined) {
                            b.push(parseInt($(a).attr("optionid")))
                        }
                    });
                    return b
                };
                var C = function () {
                    z = [];
                    w.children().each(function (i, a) {
                        if ($(a).attr("optionid") != undefined) {
                            var b = $.removeHTMLTags($(a).find(".input-option-text").val()).replace(/\r/g, "");
                            var c = {
                                optionId: parseInt($(a).attr("optionid")),
                                status: "updated",
                                text: b,
                                value: b
                            };
                            z.push(c)
                        } else {
                            var b = $.removeHTMLTags($(a).find(".input-option-text").val()).replace(/\r/g, "");
                            var c = {
                                controlId: t,
                                optionId: null,
                                status: "added",
                                text: b,
                                value: b,
                                orderId: i,
                                opinionId: X.opinionId
                            };
                            z.push(c)
                        }
                    });
                    for (var y = 0; y < A.length; y++) {
                        z.push(A[y])
                    }
                    return z
                };
                var D = function (b, c, d, e) {
                    var f = $("<li class=\"option\">" + "<div class=\"row\"><div class=\"tab-move-option\"></div><div class=\"cell\"><input type=\"text\" value=\"" + d + "\" autocomlete=\"off\" class=\"input-option-text\" /></div><div class=\"cell\" style=\"margin-left: 6px;\"><span title=\"Remove\" class=\"button-remove-option\"></span></div></div>" + "</li>");
                    if (c != null) {
                        f.attr({
                            'optionid': c
                        })
                    }
                    f.appendTo(w);
					
					
                    /*
                    f.find("input[type=text]:first")
						.inputMask({ defaultValue : I });
					*/
                    
                    
                    
                    f.find("input[type=text]:first")
					.bind("keydown", function(e) {
						var code = e.keyCode || e.which;
						if (code == '9') {
							// if -> h last in list create new option
							if(r.find('ul.options-list li').length == ($(this).closest("li").index() + 1)) {
								D(true, null, "", "");
								
								return false;
							}
						}
					})
					.inputMask({ defaultValue : I });
					
					
					
                    if (b) {
                        //f.find("input[type=text]:first").select().focus()
                        f.find("input[type=text]:first").focus()
                    }
                    f.find('.button-remove-option').click(function () {
                        if (f.attr('optionid') != undefined) {
                            var a = {
                                optionId: parseInt(f.attr('optionid')),
                                status: "deleted"
                            };
                            A.push(a);
                            f.remove();
                            /*
                            f.fadeOut("slow", function () {
                                $(this).remove()
                            })
                            */
                        } else {
                        	f.remove();
                        	/*
                            f.fadeOut("slow", function () {
                                $(this).remove()
                            })
                            */
                        }
                    })
                };
                var J = null;
                J = r.find('ul.sub-controls-list');
                //J.sortable("destroy");
                J.sortable({
                    placeholder: "sub-controls-list-drag",
                    handle: ".tab-move-sub-control",
                    opacity: 0.7,
                    axis: "y",
                    cursor: "pointer",
                    scroll: true
                });
                var K = [];
                var L = [];
                var M = function () {
                    var b = [];
                    J.children().each(function (i, a) {
                        if ($(a).attr("subcontrolid") != undefined) {
                            b.push(parseInt($(a).attr("subcontrolid")))
                        }
                    });
                    return b
                };
                var N = function () {
                    K = [];
                    J.children().each(function (i, a) {
                        if ($(a).attr("subcontrolid") != undefined) {
                            var b = $.removeHTMLTags($(a).find(".input-sub-control").val()).replace(/\r/g, "");
                            var c = {
                                controlId: parseInt($(a).attr("subcontrolid")),
                                status: "updated",
                                content: b,
                                note: "",
                                isMandatory: false,
                                isEnableNote: false,
                                inputTypeId: 0,
                                comment: "",
                                isEnableComment: false,
                                isEnableOther: false,
                                options: null,
                                controls: null,
                                fromScale: 0,
                                toScale: 0
                            };
                            K.push(c)
                        } else {
                            var b = $.removeHTMLTags($(a).find(".input-sub-control").val()).replace(/\r/g, "");
                            var c = {
                                opinionId: X.opinionId,
                                controlTypeId: 9,
                                parentId: t,
                                parentTypeId: 3,
                                content: b,
                                groupId: t,
                                orderId: i,
                                status: "added"
                            }
                            K.push(c)
                        }
                    });
                    for (var y = 0; y < L.length; y++) {
                        K.push(L[y])
                    }
                    return K
                };
                var O = function (b, c, d, e) {
                    var f = $("<li class=\"sub-control\">" + "<div class=\"row\"><div class=\"tab-move-sub-control\"></div><div class=\"cell\"><input type=\"text\" value=\"" + d + "\" autocomlete=\"off\" class=\"input-sub-control\" /></div><div class=\"cell\" style=\"margin-left: 6px;\"><span title=\"Remove\" class=\"button-remove-sub-control\"></span></div></div>" + "</li>");
                    if (c != null) {
                        f.attr({
                            'subcontrolid': c
                        })
                    }
                    f.appendTo(J);
					
                    
                    
                    /*
					f.find("input[type=text]:first")
						.inputMask({ defaultValue : H }); //  + " " + J.children().size()
					*/
					
					f.find("input[type=text]:first")
					.bind("keydown", function(e) {
						var code = e.keyCode || e.which;
						if (code == '9') {
							// if -> h last in list create new option
							if(r.find('ul.sub-controls-list li').length == ($(this).closest("li").index() + 1)) {
								O(true, null, "", "")
								
								return false;
							}
						}
					})
					.inputMask({ defaultValue : H });
					
					
					
                    if (b) {
                        //f.find("input[type=text]:first").select().focus()
                        f.find("input[type=text]:first").focus()
                    }
                    f.find('.button-remove-sub-control').click(function () {
                        if (f.attr('subcontrolid') != undefined) {
                            var a = {
                                controlId: parseInt(f.attr('subcontrolid')),
                                status: "deleted"
                            };
                            L.push(a);
                            f.remove();
                            /*
                            f.fadeOut("slow", function () {
                                $(this).remove()
                            })
                            */
                        } else {
                        	f.remove();
                        	/*
                            f.fadeOut("slow", function () {
                                $(this).remove()
                            })
                            */
                        }
                    })
                };
                var F = function () {
                	q.addClass('selected');
                    for (var x = 0; x < survey.controls.list.length; x++) {
                        if (survey.controls.list[x].controlId == t) {
                            z, K = [];
                            A, L = [];
                            if (lastEditableControl != null && lastEditableControl != o) {
                                lastEditableControl.find('.control-edit').hide();
                                lastEditableControl.find('.control-view').show();
                                
                                lastEditableControl.parent().removeClass('selected');
                            }
                            lastEditableControl = o;
                            r.find('.checkbox-is-enable-note').unbind('change').change(function () {
                                if ($(this).is(':checked')) {
                                    r.find('.container-note').show()
                                } else {
                                    r.find('.container-note').hide()
                                }
                            });
                            r.find('.checkbox-is-mandatory').unbind('change').change(function () {});
                            
                            // link
                            var cl = r.find('.checkbox-link');
                            cl.unbind('change').change(function() {
                            	if ($(this).is(':checked')) {
                            		r.find('.editor-link').show();
                            		
                            		r.find('.select-link-type').unbind('change').change(function() {
                            			if($(this).val() == 1) {
                            				r.find('.holder-embed-code').hide();
                            				r.find('.holder-image').show();
                            				
                            				// set 
                            				if(survey.controls.list[x].link) {
                            					if(survey.controls.list[x].linkTypeId == 1)
                            						r.find('.input-image').val(survey.controls.list[x].link);
                            				}
                            			}
                            			if($(this).val() == 2) {
                            				r.find('.holder-image').hide();
                            				r.find('.holder-embed-code').show();
                            				
                            				// set
                            				if(survey.controls.list[x].link) {
                            					if(survey.controls.list[x].linkTypeId == 2)
                            						r.find('.textarea-embed-code').val(survey.controls.list[x].link);
                            				}
                            			}
                            		});
                            		
                            		var lo = r.find('.select-link-type')[0];
                            		
                            		if(survey.controls.list[x].link) {
                        				if(survey.controls.list[x].linkTypeId == 1) {
                        					lo.selectedIndex = 0;
                        					r.find('.select-link-type').change();
                        				}
                    					if(survey.controls.list[x].linkTypeId == 2) {
                        					lo.selectedIndex = 1;
                        					r.find('.select-link-type').change();
                    					}
                            					
                            		} else {
                            			lo.selectedIndex = 0;
                    					r.find('.select-link-type').change();
                            		}
                            		
                            	} else {
                            		r.find('.editor-link').hide();
                            		r.find('.input-image').val("");
                            		r.find('.textarea-embed-code').val("");
                            	}
                            	
                            });
                            
                            if(survey.controls.list[x].link) {
                            	cl.prop('checked', true).change();
                            } else {
                            	cl.prop('checked', false).change();
                            }
                            
                            r.find('.button-add-option').unbind('click').click(function () {
                                D(true, null, "", "")
                            });
                            
                            
                            
                            /*
                            // TAB
                            r.find('.button-hidden-add-option')
	                            .unbind('focusin')
								.bind('focusin', function(e) {
									D(true, null, "", "")
								});
                            */
                            
                            
                            r.find('.button-add-sub-control').unbind('click').click(function () {
                                O(true, null, "", "")
                            });
                            
                            
                            
                            /*
                            // TAB
                            r.find('.button-hidden-add-sub-control')
	                            .unbind('focusin')
								.bind('focusin', function(e) {
									O(true, null, "", "")
								});
                            */
                            
                            // r.find('.input-content').val((survey.controls.list[x].content != "" ? survey.controls.list[x].content : contentDictionary.titles.title_Question));
                            r.find('.input-content')
	                        	.val((survey.controls.list[x].content != "" ? survey.controls.list[x].content : ""))
	                        	.inputMask({ defaultValue : contentDictionary.titles.title_Question });
                            
                            if (survey.controls.list[x].isEnableNote) {
                                
                            	// r.find('.textarea-note').val(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note : contentDictionary.titles.title_Note));
                            	r.find('.textarea-note')
	                        		.val(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note : ""))
	                        		.inputMask({ defaultValue : contentDictionary.titles.title_Note });
                            	
                            	r.find('.checkbox-is-enable-note')
                                 .prop('checked', survey.controls.list[x].isEnableNote); //.attr('checked', (survey.controls.list[x].isEnableNote ? 'checked' : ''));
                                r.find('.checkbox-is-enable-note').change()
                            } else {
                                
                            	// r.find('.textarea-note').val(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note : contentDictionary.titles.title_Note));
                            	r.find('.textarea-note')
	                        		.val(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note : ""))
	                        		.inputMask({ defaultValue : contentDictionary.titles.title_Note });
                            	
                            	r.find('.checkbox-is-enable-note')
                                 .prop('checked', survey.controls.list[x].isEnableNote); //.attr('checked', (survey.controls.list[x].isEnableNote ? 'checked' : ''));
                                r.find('.container-note').hide()
                            }
                            if (survey.controls.list[x].isMandatory) {
                                r.find('.checkbox-is-mandatory')
                                 .prop('checked', survey.controls.list[x].isMandatory); //.attr('checked', (survey.controls.list[x].isMandatory ? 'checked' : ''));
                                r.find('.checkbox-is-mandatory').change()
                            } else {
                                r.find('.checkbox-is-mandatory')
                                 .prop('checked', survey.controls.list[x].isMandatory); //.attr('checked', (survey.controls.list[x].isMandatory ? 'checked' : ''))
                            }
                            w.empty();
                            if (survey.controls.list[x].options.list.length != 0) {
                                for (var i = 0; i < survey.controls.list[x].options.list.length; i++) {
                                    D(false, survey.controls.list[x].options.list[i].optionId, survey.controls.list[x].options.list[i].text, survey.controls.list[x].options.list[i].value)
                                }
                            } else {
                                for (var i = 0; i < 5; i++) {
                                    //D(false, null, I + " " + (i + 1), I + " " + (i + 1))
									D(false, null, "", "");
                                }
                            }
                            J.empty();
                            if (survey.controls.list[x].subControls.list.length != 0) {
                                for (var i = 0; i < survey.controls.list[x].subControls.list.length; i++) {
                                    O(false, survey.controls.list[x].subControls.list[i].controlId, survey.controls.list[x].subControls.list[i].content, survey.controls.list[x].subControls.list[i].content)
                                }
                            } else {
                                for (var i = 0; i < 1; i++) {
                                    //O(false, null, H + " " + (i + 1), H + " " + (i + 1))
									O(false, null, "", "");
                                }
                            }
                            var c = r.find('.dropdown-input-type')[0];
                            if (survey.controls.list[x].inputTypeId != 0) {
                                c.selectedIndex = survey.controls.list[x].inputTypeId
                            } else {
                                c.selectedIndex = survey.controls.list[x].inputTypeId
                            }
                            r.find('.save-control-button').unbind("click").click(function () {
                                survey.controls.list[x].content = r.find('.input-content').val();
                                survey.controls.list[x].isEnableNote = r.find('.checkbox-is-enable-note').is(':checked');
                                survey.controls.list[x].note = r.find('.textarea-note').val();
                                survey.controls.list[x].isMandatory = r.find('.checkbox-is-mandatory').is(':checked');
                                
                                if(r.find('.checkbox-link').is(':checked')) {
                                	if(r.find('.select-link-type').val() == 1) {
                                		// link to image
                                		if(r.find('.input-image').val() != "") {
                                			survey.controls.list[x].linkTypeId = 1;
                                			survey.controls.list[x].link = r.find('.input-image').val();
                                		} else {
                                			survey.controls.list[x].linkTypeId = 0;
                                			survey.controls.list[x].link = null;
                                		}
                                	}
                                	
                                	if(r.find('.select-link-type').val() == 2) {
                                		// embed code
                                		if(r.find('.textarea-embed-code').val() != "") {
                                			survey.controls.list[x].linkTypeId = 2;
                                			survey.controls.list[x].link = r.find('.textarea-embed-code').val();
                                		} else {
                                			survey.controls.list[x].linkTypeId = 0;
                                			survey.controls.list[x].link = null;
                                		}
                                	}
                                } else {
                                	survey.controls.list[x].linkTypeId = 0;
                        			survey.controls.list[x].link = null;
                                }
                                
                                survey.controls.list[x].inputTypeId = c.selectedIndex, survey.controls.list[x].options = {
                                    list: C(),
                                    reorder: B()
                                }
                                survey.controls.list[x].subControls = {
                                    list: N(),
                                    reorder: M()
                                }
                                var b = {
                                    controlId: survey.controls.list[x].controlId
                                };
                                X.onSave(b, function (a) {
                                    G()
                                })
                            });
                            r.find('.cancel-control-button').unbind("click").click(function () {
                                G()
                            });
                            s.hide();
                            r.show();
                            
                            // default select
                            //r.find('.input-content').select();
                            
                            break
                        }
                    }
                };
                
                var lR = function() {
                	
                	// default select
                    //r.find('.input-content').select();
                	
                	if(link) {
                    	
                    	// image
                    	if(linkTypeId == 1) {
                    		s.find('.container-embed-code')
                    			.html("<img src=" + link + " />")
                    			.show();
                    	}
                    	
                    	// embed code
                    	if(linkTypeId == 2) {
                        	s.find('.container-embed-code')
                    			.html(link)
                    			.show();
                    	}
                    }
                };
                
                var G = function () {
                	q.removeClass('selected');
                    for (var x = 0; x < survey.controls.list.length; x++) {
                        if (survey.controls.list[x].controlId == t) {
                            s.show();
                            r.hide();
                            s.find('.label-content').html(survey.controls.list[x].content.replace(/\n/g, "<br/>"));
                            if (survey.controls.list[x].isMandatory) {
                                s.find('.label-mandatory').show()
                            } else {
                                s.find('.label-mandatory').hide()
                            }
                            
                            // link - view
                            if(survey.controls.list[x].link) {
                            	link = survey.controls.list[x].link;
                            	linkTypeId = survey.controls.list[x].linkTypeId;
                            	lR();
                            } else {
                            	s.find('.container-embed-code')
                            		.empty()
                            		.hide();
                            }
                            
                            if (survey.controls.list[x].isEnableNote) {
                                s.find('.label-note').html(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note.replace(/\n/gi, "<br/>").replace(/%0A/gi, "<br/>") : contentDictionary.titles.title_Note)).show()
                            } else {
                                s.find('.label-note').hide()
                            }
                            var a = s.find('.container-control-other');
                            a.empty();
                            if (survey.controls.list[x].subControls.list.length != 0) {
                                var b = $("<table cellpadding=\"0\" cellspacing=\"1\" border=\"0\" class=\"table-matrix\"></table>");
                                var c = $("<tr class=\"table-matrix-header\"></tr>");
                                var d = $("<td>&nbsp;</td>");
                                c.append(d);
                                for (var y = 0; y < survey.controls.list[x].options.list.length; y++) {
                                    var e = $("<th>" + survey.controls.list[x].options.list[y].text + "</th>");
                                    c.append(e)
                                }
                                b.append(c);
                                for (var i = 0; i < survey.controls.list[x].subControls.list.length; i++) {
                                    var f = $("<tr " + (i % 2 ? "style=\"background: #efefef\"" : "") + "></tr>");
                                    var g = $("<th>" + survey.controls.list[x].subControls.list[i].content + "</th>");
                                    f.append(g);
                                    for (var y = 0; y < survey.controls.list[x].options.list.length; y++) {
                                        var h = null;
                                        if (survey.controls.list[x].inputTypeId == 0) {
                                            h = $("<td><lable><input type=\"radio\" name=\"" + (survey.controls.list[x].controlId + "_" + survey.controls.list[x].subControls.list[i].controlId) + "\" /></label></td>")
                                        } else if (survey.controls.list[x].inputTypeId == 1) {
                                            h = $("<td><lable><input type=\"checkbox\" /></label></td>")
                                        }
                                        f.append(h)
                                    }
                                    b.append(f)
                                }
                                a.append(b)
                            } else {
                                var b = $("<table cellpadding=\"0\" cellspacing=\"1\" border=\"0\" class=\"table-matrix\"></table>");
                                var c = $("<tr class=\"table-matrix-header\"></tr>");
                                var d = $("<td>&nbsp;</td>");
                                c.append(d);
                                for (var y = 0; y < 5; y++) {
                                    var e = $("<th>" + I + " " + (y + 1) + "</th>");
                                    c.append(e)
                                }
                                b.append(c);
                                for (var i = 0; i < 1; i++) {
                                    var f = $("<tr " + (i % 2 ? "style=\"background: #efefef\"" : "") + "></tr>");
                                    var g = $("<th>" + H + " " + (i + 1) + "</th>");
                                    f.append(g);
                                    for (var y = 0; y < 5; y++) {
                                        var h = null;
                                        if (survey.controls.list[x].inputTypeId == 0) {
                                            h = $("<td><lable><input type=\"radio\" name=\"" + (survey.controls.list[x].controlId + "_" + i) + "\" /></label></td>")
                                        } else if (survey.controls.list[x].inputTypeId == 1) {
                                            h = $("<td><lable><input type=\"checkbox\" /></label></td>")
                                        }
                                        f.append(h)
                                    }
                                    b.append(f)
                                }
                                a.append(b)
                            }
                            break
                        }
                    }
                }
                
                /*
                o.find('.right-side').hover(function() {
                	s.find('.control-panel').show();
                }, function() {
                	s.find('.control-panel').hide();
                });
                */
                
                s.find('.control-panel a.edit-control-button').click(function () {
                    F()
                });
                s.find('.control-panel a.copy-control-button').click(function () {
                    var a = {
                        element: v,
                        controlId: t,
                        orderId: parseInt(v.attr("orderid"))
                    };
                    X.onCopy(a)
                });
                /*
                s.find('.control-panel a.transfer-control-button').click(function () {
                    alert("TRANSFER")
                });
                */
                s.find('.control-panel a.delete-control-button').click(function () {
                    var a = {
                        element: v,
                        controlId: t
                    };
                    X.onDelete(a)
                });
                
                /*
                if (X.isEditable) {
                    F()
                } else {
                    G()
                }
                */
                
                q.appendTo(v);
                
                G();
                
                if (X.isEditable) {
                    F();
                }
                
                lR();


                break
            }
        case 5:
            {
                break
            }
        case 6:
            {
                
            	var o = $("<div class=\"control-container\">" +
    			"<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">" +
    				"<tr>" +
		    			"<td valign=\"top\" class=\"left-side\">" +
							"<div class=\"tab-move-control\"></div>" +
						"</td>" +
						/*"<td style=\"width:1%\" valign=\"top\"><span class=\"number\"></span>.&nbsp;</td>" +*/
        				"<td valign=\"top\" class=\"right-side\">" +
	        				
        					"<div class=\"control-edit ui-form\" style=\"display: none\">" +
		        				"<div class=\"row\" style=\"height: 52px;\">" +
		        					"<div class=\"cell\"><span class=\"label-edit-control-number\"></span>.&nbsp;</div>" +
		        					"<div class=\"cell\"><textarea style=\"width: 304px; height: 47px;\" autocomplete=\"off\" class=\"input-content\" maxlength=\"1000\"></textarea></div>" +
		        				"</div>" +
		        				
		        				"<div class=\"row-choice\">" +
		        					"<label><span><input type=\"checkbox\" class=\"checkbox-is-mandatory\" /></span>Required question</label>" +
		        				"</div>" +
		        				"<div class=\"row-choice\">" +
	                				"<label><span><input type=\"checkbox\" class=\"checkbox-link\" /></span>Add Image/Embed Code</label>" +
	                				"<div class=\"editor-link\" style=\"display: none; padding: 10px 0px 0px 20px;\">" +
		                				"<div>" +
		                					"<select class=\"select-link-type\"><option value=\"1\">Link to Image</option><option value=\"2\">Embed Code</option></select>" +
		                				"</div>" +
	            						"<div class=\"holder-image\" style=\"display: none; overflow: hidden;\">" +
	            							"<input class=\"input-image\" type=\"text\" style=\"width: 284px\" />" +
	            						"</div>" +
	            						"<div class=\"holder-embed-code\" style=\"display: none; overflow: hidden;\">" +
	            							"<textarea class=\"textarea-embed-code\" style=\"width: 284px; height: 47px;\" autocomplete=\"off\"></textarea>" +
	            						"</div>" +
	        						"</div>" +
	                			"</div>" +
		        				"<div class=\"row-choice\">" +
		        					"<label><span><input type=\"checkbox\" class=\"checkbox-is-enable-note\" /></span>Help text</label>" +
		        					"<div class=\"container-note\" style=\"display: none; height: 52px; padding: 10px 0px 0px 20px;\">" +
		        						"<textarea style=\"width: 284px; height: 47px;\" autocomplete=\"off\" class=\"textarea-note\" ></textarea>" +
		        					"</div>" +
		        				"</div>" +
								
		        				"<h2>Labels</h2>" +
		        				"<div class=\"container-edit\" style=\"padding-top: 4px;\"></div>" +
		        				"<div>" +
									"<h2>Display Options:</h2>" +
									"<div class=\"row\">" +
										"<div class=\"cell\" style=\"width: 130px;\">Date/Time format:</div><div class=\"cell\"><select class=\"dropdown-input-type\"><option value=\"0\">MMM/dd - Month/Day</option><option value=\"1\">MMM/dd/yyyy - Month/Day/Year</option><option value=\"2\">MMM/dd/yyyy HH:mm - Month/Day/Year Hours:Minutes</option><option value=\"3\">dd/MMM - Day/Month</option><option value=\"4\">dd/MMM/yyyy - Day/Month/Year</option><option value=\"5\">dd/MMM/yyyy HH:mm - Day/Month/Year Hours:Minutes</option><option value=\"6\">MMM - Month</option><option value=\"7\">dd - Day</option><option value=\"8\">yyyy - Year</option><option value=\"9\">HH:mm - Hours:Minutes</option><option value=\"10\">TimeZone</option></select></div>" +
									"</div>" +		
		        				"</div>" +
		        				
		        				"<div class=\"row\">" +
		        					"<div class=\"cell\"><a href=\"javascript:;\" title=\"Done Editing\" class=\"button-blue save-control-button\"><span>Done Editing</span></a></div><div class=\"cell\" style=\"padding-left: 8px; line-height: 21px;\"><a href=\"javascript:;\" title=\"Cancel\" class=\"cancel-control-button\">Cancel</a></div>" +
		        				"</div>" +
		        			"</div>" +
		        			"<div class=\"control-view demo-question\">" +
		        				"<div class=\"control-panel\"><a href=\"javascript:;\" class=\"edit-control-button button-white\" tag=\"edit\" title=\"Edit\"><span>Edit</span></a>&nbsp;<a href=\"javascript:;\" class=\"copy-control-button button-white\" tag=\"copy\" title=\"Copy\"><span>Copy</span></a>&nbsp;<a href=\"javascript:;\" class=\"delete-control-button\" tag=\"delete\" title=\"Delete\"><span>Delete</span></a></div>" +
		        				
		        				"<div class=\"demo-question-heading\">" +
		        					"<span class=\"number\"></span>.&nbsp;" +
		        					"<span class=\"label-mandatory\" style=\"display: none;\">*&nbsp;</span>" +
		        					"<span class=\"label-content\">Enter your question here.</span>" +
		        				"</div>" +
		        				"<div class=\"demo-question-content\">" +
			        				"<div class=\"container-embed-code q-image\" style=\"display: none\"></div>" +
			        				"<div class=\"label-note q-help\" style=\"display: none;\">You can enter some information about this question here.</div>" +
			        				"<ul class=\"container-control-includes\"></ul>" +
			        				"<div class=\"container-control-other\"></div>" +
		        				"</div>" +
		        			"</div>" +
        				"</td>" +
        			"</tr>" +
        		"</table>" +
        		"</div>");
            	
            	var c = q; //.find('.form-center:first');
                o.appendTo(c);
                
                var link = null;
                var linkTypeId = 0;
                
                var r = o.find('.control-edit');
                var s = o.find('.control-view');
                var t = X.controlId;
                var P = r.find('.container-edit').empty();
                var Q = function (a, b) {
                    P.empty();
                    switch (a) {
                    case 0:
                        {
                            var f = $("<div class=\"row\">" +
                            	"<div class=\"cell\">" +
                            		"<input type=\"text\" value=\"" + (b.monthTitle != null ? b.monthTitle : contentDictionary.titles.title_Month) + "\" class=\"input-month-field\" />" +
                            	"</div>" +
                            	"<div class=\"cell\" style=\"margin-left: 4px;\">" +
                            		"<input type=\"text\" value=\"" + (b.dayTitle != null ? b.dayTitle : contentDictionary.titles.title_Day) + "\" class=\"input-day-field\" />" +
                            	"</div>" +
                            "</div>").appendTo(P);
                            
                            
                            break
                        }
                    case 1:
                        {
                            var f = $("<div class=\"row\">" +
                            	"<div class=\"cell\">" +
                            		"<input type=\"text\" value=\"" + (b.monthTitle != null ? b.monthTitle : contentDictionary.titles.title_Month) + "\" class=\"input-month-field\" />" +
                            	"</div>" +
                            	"<div class=\"cell\" style=\"margin-left: 3px;\">" +
                            		"<input type=\"text\" value=\"" + (b.dayTitle != null ? b.dayTitle : contentDictionary.titles.title_Day) + "\" class=\"input-day-field\" />" +
                            	"</div>" +
                            	"<div class=\"cell\" style=\"margin-left: 3px;\">" +
                            		"<input type=\"text\" value=\"" + (b.yearTitle != null ? b.yearTitle : contentDictionary.titles.title_Year) + "\" class=\"input-year-field\" />" +
                            	"</div>" +
                            "</div>").appendTo(P);
                            
                            
                            break
                        }
                    case 2:
                        {
                            var f = $("<div class=\"row\">" +
                            	"<div class=\"cell\">" +
                            		"<input type=\"text\" value=\"" + (b.monthTitle != null ? b.monthTitle : contentDictionary.titles.title_Month) + "\" class=\"input-month-field\" />" +
                            	"</div>" +
                            	"<div class=\"cell\" style=\"margin-left: 3px;\">" +
                            		"<input type=\"text\" value=\"" + (b.dayTitle != null ? b.dayTitle : contentDictionary.titles.title_Day) + "\" class=\"input-day-field\" />" +
                            	"</div>" +
                            	"<div class=\"cell\" style=\"margin-left: 3px;\">" +
                            		"<input type=\"text\" value=\"" + (b.yearTitle != null ? b.yearTitle : contentDictionary.titles.title_Year) + "\" class=\"input-year-field\" />" +
                            	"</div>" +
                            	"<div class=\"cell\" style=\"margin-left: 12px;\">" +
                            		"<input type=\"text\" value=\"" + (b.hoursTitle != null ? b.hoursTitle : contentDictionary.titles.title_Hours) + "\" class=\"input-hours-field\" />&nbsp;:" +
                            	"</div>" +
                            	"<div class=\"cell\" style=\"margin-left: 3px;\">" +
                            		"<input type=\"text\" value=\"" + (b.minutesTitle != null ? b.minutesTitle : contentDictionary.titles.title_Minutes) + "\" class=\"input-minutes-field\" />" +
                            	"</div>" +
                            "</div>").appendTo(P);
                            
                            
                            break
                        }
                    case 3:
                        {
                            var f = $("<div class=\"row\">" +
                            	"<div class=\"cell\">" +
                            		"<input type=\"text\" value=\"" + (b.dayTitle != null ? b.dayTitle : contentDictionary.titles.title_Day) + "\" class=\"input-day-field\" />" +
                            	"</div>" +
                            	"<div class=\"cell\" style=\"margin-left: 3px;\">" +
                            		"<input type=\"text\" value=\"" + (b.monthTitle != null ? b.monthTitle : contentDictionary.titles.title_Month) + "\" class=\"input-month-field\" />" +
                            	"</div>" +
                            "</div>").appendTo(P);
                            
                            
                            
                            break
                        }
                    case 4:
                        {
                            var f = $("<div class=\"row\">" +
                            	"<div class=\"cell\">" +
                            		"<input type=\"text\" value=\"" + (b.dayTitle != null ? b.dayTitle : contentDictionary.titles.title_Day) + "\" class=\"input-day-field\" />" +
                            	"</div>" +
                            	"<div class=\"cell\" style=\"margin-left: 3px;\">" +
                            		"<input type=\"text\" value=\"" + (b.monthTitle != null ? b.monthTitle : contentDictionary.titles.title_Month) + "\" class=\"input-month-field\" />" +
                            	"</div><div class=\"cell\" style=\"margin-left: 3px;\">" +
                            		"<input type=\"text\" value=\"" + (b.yearTitle != null ? b.yearTitle : contentDictionary.titles.title_Year) + "\" class=\"input-year-field\" />" +
                            	"</div>" +
                            "</div>").appendTo(P);
                            
                            
                            
                            break
                        }
                    case 5:
                        {
                            var f = $("<div class=\"row\">" +
                            	"<div class=\"cell\">" +
                            		"<input type=\"text\" value=\"" + (b.dayTitle != null ? b.dayTitle : contentDictionary.titles.title_Day) + "\" class=\"input-day-field\" />" +
                            	"</div>" +
                            	"<div class=\"cell\" style=\"margin-left: 3px;\">" +
                            		"<input type=\"text\" value=\"" + (b.monthTitle != null ? b.monthTitle : contentDictionary.titles.title_Month) + "\" class=\"input-month-field\" />" +
                            	"</div>" +
                            	"<div class=\"cell\" style=\"margin-left: 3px;\">" +
                            		"<input type=\"text\" value=\"" + (b.yearTitle != null ? b.yearTitle : contentDictionary.titles.title_Year) + "\" class=\"input-year-field\" />" +
                            	"</div>" +
                            	"<div class=\"cell\" style=\"margin-left: 12px;\">" +
                            		"<input type=\"text\" value=\"" + (b.hoursTitle != null ? b.hoursTitle : contentDictionary.titles.title_Hours) + "\" class=\"input-hours-field\" />&nbsp;:" +
                            	"</div>" +
                            	"<div class=\"cell\" style=\"margin-left: 3px;\">" +
                            		"<input type=\"text\" value=\"" + (b.minutesTitle != null ? b.minutesTitle : contentDictionary.titles.title_Minutes) + "\" class=\"input-minutes-field\" />" +
                            	"</div>" +
                            "</div>").appendTo(P);
                            
                            
                            
                            break
                        }
                    case 6:
                        {
                            var f = $("<div class=\"row\">" +
                            	"<div class=\"cell\">" +
                            		"<input type=\"text\" value=\"" + (b.monthTitle != null ? b.monthTitle : contentDictionary.titles.title_Month) + "\" class=\"input-month-field\" />" +
                            	"</div>" +
                            "</div>").appendTo(P);
                            
                            
                            
                            break
                        }
                    case 7:
                        {
                            var f = $("<div class=\"row\">" +
                            	"<div class=\"cell\">" +
                            		"<input type=\"text\" value=\"" + (b.dayTitle != null ? b.dayTitle : contentDictionary.titles.title_Day) + "\" class=\"input-day-field\" />" +
                            	"</div>" +
                            "</div>").appendTo(P);
                            
                            
                            
                            break
                        }
                    case 8:
                        {
                            var f = $("<div class=\"row\">" +
                            	"<div class=\"cell\">" +
                            		"<input type=\"text\" value=\"" + (b.yearTitle != null ? b.yearTitle : contentDictionary.titles.title_Year) + "\" class=\"input-year-field\" />" +
                            	"</div>" +
                            "</div>").appendTo(P);
                            
                            
                            break
                        }
                    case 9:
                        {
                            var f = $("<div class=\"row\">" +
                            	"<div class=\"cell\">" +
                            		"<input type=\"text\" value=\"" + (b.hoursTitle != null ? b.hoursTitle : contentDictionary.titles.title_Hours) + "\" class=\"input-hours-field\" />&nbsp;:" +
                            	"</div>" +
                            	"<div class=\"cell\" style=\"margin-left: 3px;\">" +
                            		"<input type=\"text\" value=\"" + (b.minutesTitle != null ? b.minutesTitle : contentDictionary.titles.title_Minutes) + "\" class=\"input-minutes-field\" />" +
                            	"</div>" +
                            "</div>").appendTo(P);
                            
                            
                            
                            break
                        }
                    case 10:
                        {
                            var f = $("<div class=\"row\">" +
                            	"<div class=\"cell\">" +
                            		"<input type=\"text\" value=\"" + (b.timeZoneTitle != null ? b.timeZoneTitle : contentDictionary.titles.title_TimeZone) + "\" class=\"input-timezone-field\" />" +
                            	"</div>" +
                            "</div>").appendTo(P);
                            
                            
                            
                            break
                        }
                    }
                };
                var F = function () {
                	q.addClass('selected');
                    for (var x = 0; x < survey.controls.list.length; x++) {
                        if (survey.controls.list[x].controlId == t) {
                            if (lastEditableControl != null && lastEditableControl != o) {
                                lastEditableControl.find('.control-edit').hide();
                                lastEditableControl.find('.control-view').show();
                                
                                lastEditableControl.parent().removeClass('selected');
                            }
                            lastEditableControl = o;
                            r.find('.checkbox-is-enable-note').unbind('change').change(function () {
                                if ($(this).is(':checked')) {
                                    r.find('.container-note').show()
                                } else {
                                    r.find('.container-note').hide()
                                }
                            });
                            r.find('.checkbox-is-mandatory').unbind('change').change(function () {});
                            
                            // link
                            var cl = r.find('.checkbox-link');
                            cl.unbind('change').change(function() {
                            	if ($(this).is(':checked')) {
                            		r.find('.editor-link').show();
                            		
                            		r.find('.select-link-type').unbind('change').change(function() {
                            			if($(this).val() == 1) {
                            				r.find('.holder-embed-code').hide();
                            				r.find('.holder-image').show();
                            				
                            				// set 
                            				if(survey.controls.list[x].link) {
                            					if(survey.controls.list[x].linkTypeId == 1)
                            						r.find('.input-image').val(survey.controls.list[x].link);
                            				}
                            			}
                            			if($(this).val() == 2) {
                            				r.find('.holder-image').hide();
                            				r.find('.holder-embed-code').show();
                            				
                            				// set
                            				if(survey.controls.list[x].link) {
                            					if(survey.controls.list[x].linkTypeId == 2)
                            						r.find('.textarea-embed-code').val(survey.controls.list[x].link);
                            				}
                            			}
                            		});
                            		
                            		var lo = r.find('.select-link-type')[0];
                            		
                            		if(survey.controls.list[x].link) {
                        				if(survey.controls.list[x].linkTypeId == 1) {
                        					lo.selectedIndex = 0;
                        					r.find('.select-link-type').change();
                        				}
                    					if(survey.controls.list[x].linkTypeId == 2) {
                        					lo.selectedIndex = 1;
                        					r.find('.select-link-type').change();
                    					}
                            					
                            		} else {
                            			lo.selectedIndex = 0;
                    					r.find('.select-link-type').change();
                            		}
                            		
                            	} else {
                            		r.find('.editor-link').hide();
                            		r.find('.input-image').val("");
                            		r.find('.textarea-embed-code').val("");
                            	}
                            	
                            });
                            
                            if(survey.controls.list[x].link) {
                            	cl.prop('checked', true).change();
                            } else {
                            	cl.prop('checked', false).change();
                            }
                            
                            r.find('.dropdown-input-type').unbind('change').change(function () {
                                var a = ($(this)[0].selectedIndex != undefined ? $(this)[0].selectedIndex : 0);
                                Q(a, survey.controls.list[x])
                            });
                            
                            // r.find('.input-content').val((survey.controls.list[x].content != "" ? survey.controls.list[x].content : contentDictionary.titles.title_Question));
                            r.find('.input-content')
	                        	.val((survey.controls.list[x].content != "" ? survey.controls.list[x].content : ""))
	                        	.inputMask({ defaultValue : contentDictionary.titles.title_Question });
                            
                            if (survey.controls.list[x].isEnableNote) {
                                
                            	// r.find('.textarea-note').val(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note : contentDictionary.titles.title_Note));
                            	r.find('.textarea-note')
	                        		.val(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note : ""))
	                        		.inputMask({ defaultValue : contentDictionary.titles.title_Note });
                            	
                            	r.find('.checkbox-is-enable-note')
                                 .prop('checked', survey.controls.list[x].isEnableNote); //.attr('checked', (survey.controls.list[x].isEnableNote ? 'checked' : ''));
                                r.find('.checkbox-is-enable-note').change()
                            } else {
                                
                            	// r.find('.textarea-note').val(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note : contentDictionary.titles.title_Note));
                            	r.find('.textarea-note')
	                        		.val(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note : ""))
	                        		.inputMask({ defaultValue : contentDictionary.titles.title_Note });
                            	
                            	r.find('.checkbox-is-enable-note')
                                 .prop('checked', survey.controls.list[x].isEnableNote); //.attr('checked', (survey.controls.list[x].isEnableNote ? 'checked' : ''));
                                r.find('.container-note').hide()
                            }
                            if (survey.controls.list[x].isMandatory) {
                                r.find('.checkbox-is-mandatory')
                                 .prop('checked', survey.controls.list[x].isMandatory); //.attr('checked', (survey.controls.list[x].isMandatory ? 'checked' : ''));
                                r.find('.checkbox-is-mandatory').change()
                            } else {
                                r.find('.checkbox-is-mandatory')
                                 .prop('checked', survey.controls.list[x].isMandatory); //.attr('checked', (survey.controls.list[x].isMandatory ? 'checked' : ''))
                            }
                            var c = r.find('.dropdown-input-type')[0];
                            if (survey.controls.list[x].inputTypeId != 0) {
                                c.selectedIndex = survey.controls.list[x].inputTypeId
                            } else {
                                c.selectedIndex = survey.controls.list[x].inputTypeId
                            }
                            Q(survey.controls.list[x].inputTypeId, survey.controls.list[x]);
                            r.find('.save-control-button').unbind("click").click(function () {
                                survey.controls.list[x].content = r.find('.input-content').val();
                                survey.controls.list[x].isEnableNote = r.find('.checkbox-is-enable-note').is(':checked');
                                survey.controls.list[x].note = r.find('.textarea-note').val();
                                survey.controls.list[x].isMandatory = r.find('.checkbox-is-mandatory').is(':checked');
                                
                                if(r.find('.checkbox-link').is(':checked')) {
                                	if(r.find('.select-link-type').val() == 1) {
                                		// link to image
                                		if(r.find('.input-image').val() != "") {
                                			survey.controls.list[x].linkTypeId = 1;
                                			survey.controls.list[x].link = r.find('.input-image').val();
                                		} else {
                                			survey.controls.list[x].linkTypeId = 0;
                                			survey.controls.list[x].link = null;
                                		}
                                	}
                                	
                                	if(r.find('.select-link-type').val() == 2) {
                                		// embed code
                                		if(r.find('.textarea-embed-code').val() != "") {
                                			survey.controls.list[x].linkTypeId = 2;
                                			survey.controls.list[x].link = r.find('.textarea-embed-code').val();
                                		} else {
                                			survey.controls.list[x].linkTypeId = 0;
                                			survey.controls.list[x].link = null;
                                		}
                                	}
                                } else {
                                	survey.controls.list[x].linkTypeId = 0;
                        			survey.controls.list[x].link = null;
                                }
                                
                                survey.controls.list[x].inputTypeId = c.selectedIndex;
                                if (r.find('.input-month-field').val() != undefined) survey.controls.list[x].monthTitle = r.find('.input-month-field').val();
                                if (r.find('.input-day-field').val() != undefined) survey.controls.list[x].dayTitle = r.find('.input-day-field').val();
                                if (r.find('.input-year-field').val() != undefined) survey.controls.list[x].yearTitle = r.find('.input-year-field').val();
                                if (r.find('.input-hours-field').val() != undefined) survey.controls.list[x].hoursTitle = r.find('.input-hours-field').val();
                                if (r.find('.input-minutes-field').val() != undefined) survey.controls.list[x].minutesTitle = r.find('.input-minutes-field').val();
                                if (r.find('.input-timezone-field').val() != undefined) survey.controls.list[x].timeZoneTitle = r.find('.input-timezone-field').val();
                                var b = {
                                    controlId: survey.controls.list[x].controlId
                                };
                                X.onSave(b, function (a) {
                                    G()
                                })
                            });
                            r.find('.cancel-control-button').unbind("click").click(function () {
                                G()
                            });
                            s.hide();
                            r.show();
                            
                            // default select
                            //r.find('.input-content').select();
                            
                            break
                        }
                    }
                };
                
                var lR = function() {
                	
                	// default select
                    //r.find('.input-content').select();
                	
                	if(link) {
                    	
                    	// image
                    	if(linkTypeId == 1) {
                    		s.find('.container-embed-code')
                    			.html("<img src=" + link + " />")
                    			.show();
                    	}
                    	
                    	// embed code
                    	if(linkTypeId == 2) {
                        	s.find('.container-embed-code')
                    			.html(link)
                    			.show();
                    	}
                    }
                };
                
                var G = function () {
                	q.removeClass('selected');
                    for (var x = 0; x < survey.controls.list.length; x++) {
                        if (survey.controls.list[x].controlId == t) {
                            r.hide();
                            s.show();
                            s.find('.label-content').html(survey.controls.list[x].content.replace(/\n/g, "<br/>"));
                            if (survey.controls.list[x].isMandatory) {
                                s.find('.label-mandatory').show()
                            } else {
                                s.find('.label-mandatory').hide()
                            }
                            
                            // link - view
                            if(survey.controls.list[x].link) {
                            	link = survey.controls.list[x].link;
                            	linkTypeId = survey.controls.list[x].linkTypeId;
                            	lR();
                            } else {
                            	s.find('.container-embed-code')
                            		.empty()
                            		.hide();
                            }
                            
                            if (survey.controls.list[x].isEnableNote) {
                                s.find('.label-note').html(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note.replace(/\n/gi, "<br/>").replace(/%0A/gi, "<br/>") : contentDictionary.titles.title_Note)).show()
                            } else {
                                s.find('.label-note').hide()
                            }
                            var a = s.find('.container-control-other');
                            a.empty();
                            switch (survey.controls.list[x].inputTypeId) {
                            case 0:
                                {
                            	
                            		
                            		
                                    
                                    // MMM / DD
                                	
                                	var b = $("<li>" +
                        				"<ul class=\"list-date\">" +
                        					"<li>" +
                        						"<div class=\"q-label\"><label>" + (survey.controls.list[x].monthTitle != null ? survey.controls.list[x].monthTitle : messages.month) + "</label></div>" +
                        						"<div><select name=\"" + t + "\" class=\"months-list\" /></div>" +
                        					"</li>" +
                        					"<li>" +
                        						"<div class=\"q-label\"><label>" + (survey.controls.list[x].dayTitle != null ? survey.controls.list[x].dayTitle : messages.day) + "</label></div>" +
                        						"<div><select name=\"" + t + "\" class=\"days-list\" /></div>" +
                        					"</li>" +
                        				"</ul>" +
                        			"</li>").appendTo(a);
                                    
                                    b.find(".months-list").loadSelect(messages.months);
                                    b.find(".days-list").loadSelect(messages.days);
                                    
                                    break
                                }
                            case 1:
                                {
                                    
                            		
                            		
                            		// MMM / DD / YYYY
	                            	
                                	var b = $("<li>" +
                            			"<ul class=\"list-date\">" +
                        					"<li>" +
                        						"<div class=\"q-label\"><label>" + (survey.controls.list[x].monthTitle != null ? survey.controls.list[x].monthTitle : messages.month) + "</label></div>" +
                        						"<div><select name=\"" + t + "\" class=\"months-list\" /></div>" +
                        					"</li>" +
                        					"<li>" +
                        						"<div class=\"q-label\"><label>" + (survey.controls.list[x].dayTitle != null ? survey.controls.list[x].dayTitle : messages.day) + "</label></div>" +
                        						"<div><select name=\"" + t + "\" class=\"days-list\" /></div>" +
                        					"</li>" +
                        					"<li>" +
                    							"<div class=\"q-label\"><label>" + (survey.controls.list[x].yearTitle != null ? survey.controls.list[x].yearTitle : messages.year) + "</label></div>" +
                    							"<div><input name=\"" + t + "\" type=\"text\" maxlength=\"4\" size=\"4\" class=\"year-field text-field\" /></div>" +
                    						"</li>" +
                        				"</ul>" +
                        			"</li>").appendTo(a);
                                    
                                    b.find(".months-list").loadSelect(messages.months);
                                    b.find(".days-list").loadSelect(messages.days);
                                    
                                    break
                                }
                            case 2:
                                {
                                    
                            		
                            	
	                            	// MMM / DD / YYYY HH:MM
	                        		
	                            	var b = $("<li>" +
	                        			"<ul class=\"list-date\">" +
	                    					"<li>" +
	                    						"<div class=\"q-label\"><label>" + (survey.controls.list[x].monthTitle != null ? survey.controls.list[x].monthTitle : messages.month) + "</label></div>" +
	                    						"<div><select name=\"" + t + "\" class=\"months-list\" /></div>" +
	                    					"</li>" +
	                    					"<li>" +
	                    						"<div class=\"q-label\"><label>" + (survey.controls.list[x].dayTitle != null ? survey.controls.list[x].dayTitle : messages.day) + "</label></div>" +
	                    						"<div><select name=\"" + t + "\" class=\"days-list\" /></div>" +
	                    					"</li>" +
	                    					"<li>" +
	                							"<div class=\"q-label\"><label>" + (survey.controls.list[x].yearTitle != null ? survey.controls.list[x].yearTitle : messages.year) + "</label></div>" +
	                							"<div><input name=\"" + t + "\" type=\"text\" maxlength=\"4\" size=\"4\" class=\"year-field text-field\" /></div>" +
	                						"</li>" +
	                					"</ul>" +
	                					"<ul class=\"list-time\">" +
	                						"<li>" +
	            								"<div class=\"q-label\"><label>" + (survey.controls.list[x].hoursTitle != null ? survey.controls.list[x].hoursTitle : messages.hours) + "</label></div>" +
	            								"<div><select name=\"" + t + "\" class=\"hours-list\" /></div>" +
	            							"</li>" +
	            							"<li>" +
												"<div class=\"q-label\">&nbsp;</div>" +
												"<div>:</div>" +
											"</li>" +
	            							"<li>" +
	        									"<div class=\"q-label\"><label>" + (survey.controls.list[x].minutesTitle != null ? survey.controls.list[x].minutesTitle : messages.minutes) + "</label></div>" +
	        									"<div><select name=\"" + t + "\" class=\"minutes-list\" /></div>" +
	        								"</li>" +
	                    				"</ul>" +
	                    			"</li>").appendTo(a);
                                    
                                    b.find(".months-list").loadSelect(messages.months);
                                    b.find(".days-list").loadSelect(messages.days);
                                    b.find(".hours-list").loadSelect(messages.hours);
                                    b.find(".minutes-list").loadSelect(messages.minutes);
                                    
                                    break
                                }
                            case 3:
                                {
                                    
                            		
                            	
	                            	// DD / MMM
	                            	
	                            	var b = $("<li>" +
	                        			"<ul class=\"list-date\">" +
	                    					"<li>" +
	                    						"<div class=\"q-label\"><label>" + (survey.controls.list[x].dayTitle != null ? survey.controls.list[x].dayTitle : messages.day) + "</label></div>" +
	                    						"<div><select name=\"" + t + "\" class=\"days-list\" /></div>" +
	                    					"</li>" +
	                    					"<li>" +
	                							"<div class=\"q-label\"><label>" + (survey.controls.list[x].monthTitle != null ? survey.controls.list[x].monthTitle : messages.month) + "</label></div>" +
	                							"<div><select name=\"" + t + "\" class=\"months-list\" /></div>" +
	                						"</li>" +
	                					"</ul>" +
	                    			"</li>").appendTo(a);
                                    
                                    b.find(".days-list").loadSelect(messages.days);
                                    b.find(".months-list").loadSelect(messages.months);
                                    
                                    break
                                }
                            case 4:
                                {
                                    
                            		
                            	
	                            	// DD / MMM / YYYY
	                        		
	                            	var b = $("<li>" +
	                            			"<ul class=\"list-date\">" +
	                        					"<li>" +
	                        						"<div class=\"q-label\"><label>" + (survey.controls.list[x].dayTitle != null ? survey.controls.list[x].dayTitle : messages.day) + "</label></div>" +
	                        						"<div><select name=\"" + t + "\" class=\"days-list\" /></div>" +
	                        					"</li>" +
	                        					"<li>" +
	                    							"<div class=\"q-label\"><label>" + (survey.controls.list[x].monthTitle != null ? survey.controls.list[x].monthTitle : messages.month) + "</label></div>" +
	                    							"<div><select name=\"" + t + "\" class=\"months-list\" /></div>" +
	                    						"</li>" +
	                        					"<li>" +
	                    							"<div class=\"q-label\"><label>" + (survey.controls.list[x].yearTitle != null ? survey.controls.list[x].yearTitle : messages.year) + "</label></div>" +
	                    							"<div><input name=\"" + t + "\" type=\"text\" maxlength=\"4\" size=\"4\" class=\"year-field text-field\" /></div>" +
	                    						"</li>" +
	                    					"</ul>" +
	                        			"</li>").appendTo(a);
                                    
                                    b.find(".days-list").loadSelect(messages.days);
                                    b.find(".months-list").loadSelect(messages.months);
                                    
                                    
                                    break
                                }
                            case 5:
                                {
                            	
                            		
                            	
	                            	// DD / MMM / YYYY HH:MM
	                            	
	                            	var b = $("<li>" +
	                            			"<ul class=\"list-date\">" +
	                        					"<li>" +
	                        						"<div class=\"q-label\"><label>" + (survey.controls.list[x].dayTitle != null ? survey.controls.list[x].dayTitle : messages.day) + "</label></div>" +
	                        						"<div><select name=\"" + t + "\" class=\"days-list\" /></div>" +
	                        					"</li>" +
	                        					"<li>" +
	                    							"<div class=\"q-label\"><label>" + (survey.controls.list[x].monthTitle != null ? survey.controls.list[x].monthTitle : messages.month) + "</label></div>" +
	                    							"<div><select name=\"" + t + "\" class=\"months-list\" /></div>" +
	                    						"</li>" +
	                        					"<li>" +
	                    							"<div class=\"q-label\"><label>" + (survey.controls.list[x].yearTitle != null ? survey.controls.list[x].yearTitle : messages.year) + "</label></div>" +
	                    							"<div><input name=\"" + t + "\" type=\"text\" maxlength=\"4\" size=\"4\" class=\"year-field text-field\" /></div>" +
	                    						"</li>" +
	                    					"</ul>" +
	                    					"<ul class=\"list-time\">" +
	                    						"<li>" +
	                								"<div class=\"q-label\"><label>" + (survey.controls.list[x].hoursTitle != null ? survey.controls.list[x].hoursTitle : messages.hours) + "</label></div>" +
	                								"<div><select name=\"" + t + "\" class=\"hours-list\" /></div>" +
	                							"</li>" +
	                							"<li>" +
    												"<div class=\"q-label\">&nbsp;</div>" +
    												"<div>:</div>" +
    											"</li>" +
	                							"<li>" +
	            									"<div class=\"q-label\"><label>" + (survey.controls.list[x].minutesTitle != null ? survey.controls.list[x].minutesTitle : messages.minutes) + "</label></div>" +
	            									"<div><select name=\"" + t + "\" class=\"minutes-list\" /></div>" +
	            								"</li>" +
	                        				"</ul>" +
	                        			"</li>").appendTo(a);
                            	
                                    b.find(".days-list").loadSelect(messages.days);
                                    b.find(".months-list").loadSelect(messages.months);
                                    b.find(".hours-list").loadSelect(messages.hours);
                                    b.find(".minutes-list").loadSelect(messages.minutes);
                                    
                                    break
                                }
                            case 6:
                                {
                            	
                            		
                            	
                            		// MMM
                            	
	                            	var b = $("<li>" +
	                            			"<ul class=\"list-date\">" +
	                        					"<li>" +
	                    							"<div class=\"q-label\"><label>" + (survey.controls.list[x].monthTitle != null ? survey.controls.list[x].monthTitle : messages.month) + "</label></div>" +
	                    							"<div><select name=\"" + t + "\" class=\"months-list\" /></div>" +
	                    						"</li>" +
	                    					"</ul>" +
	                        			"</li>").appendTo(a);
                                    
                                    b.find(".months-list").loadSelect(messages.months);
                                    
                                    break
                                }
                            case 7:
                                {
                                    
                            		
                            		// DD
                            		
                            		var b = $("<li>" +
                                			"<ul class=\"list-date\">" +
                            					"<li>" +
                            						"<div class=\"q-label\"><label>" + (survey.controls.list[x].dayTitle != null ? survey.controls.list[x].dayTitle : messages.day) + "</label></div>" +
                            						"<div><select name=\"" + t + "\" class=\"days-list\" /></div>" +
                            					"</li>" +
                        					"</ul>" +
                            			"</li>").appendTo(a);
                            		
                                    b.find(".days-list").loadSelect(messages.days);
                                    
                                    break
                                }
                            case 8:
                                {
                            	
                            	
                                    // YYYY
                                    
                                    var b = $("<li>" +
                                			"<ul class=\"list-date\">" +
                            					"<li>" +
                        							"<div class=\"q-label\"><label>" + (survey.controls.list[x].yearTitle != null ? survey.controls.list[x].yearTitle : messages.year) + "</label></div>" +
                        							"<div><input name=\"" + t + "\" type=\"text\" maxlength=\"4\" size=\"4\" class=\"year-field text-field\" /></div>" +
                        						"</li>" +
                        					"</ul>" +
                            			"</li>").appendTo(a);
                                    
                                    break
                                }
                            case 9:
                                {
                                    
                            		
                            	
                            		// HH : MM
                                	
                                	var b = $("<li>" +
                                			"<ul class=\"list-time\">" +
                        						"<li>" +
                    								"<div class=\"q-label\"><label>" + (survey.controls.list[x].hoursTitle != null ? survey.controls.list[x].hoursTitle : messages.hours) + "</label></div>" +
                    								"<div><select name=\"" + t + "\" class=\"hours-list\" /></div>" +
                    							"</li>" +
                    							"<li>" +
        											"<div class=\"q-label\">&nbsp;</div>" +
        											"<div>:</div>" +
        										"</li>" +
                    							"<li>" +
                									"<div class=\"q-label\"><label>" + (survey.controls.list[x].minutesTitle != null ? survey.controls.list[x].minutesTitle : messages.minutes) + "</label></div>" +
                									"<div><select name=\"" + t + "\" class=\"minutes-list\" /></div>" +
                								"</li>" +
                            				"</ul>" +
                            			"</li>").appendTo(a);
                                    
                                    b.find(".hours-list").loadSelect(messages.hours);
                                    b.find(".minutes-list").loadSelect(messages.minutes);
                                    
                                    break
                                }
                            case 10:
                                {
                                    
                            	
                            		
                            	
                            		// TIMEZONE
                                	
                                	var b = $("<li>" +
                                			"<ul class=\"list-date\">" +
                            					"<li>" +
                            						"<div class=\"q-label\"><label>" + (survey.controls.list[x].timeZoneTitle != null ? survey.controls.list[x].timeZoneTitle : messages.timeZone) + "</label></div>" +
                            						"<div><select name=\"" + t + "\" class=\"timezones-list\" /></div>" +
                            					"</li>" +
                        					"</ul>" +
                            			"</li>").appendTo(a);
                                    
                                    
                                    b.find(".timezones-list").loadSelect(messages.timeZones);
                                    
                                    break
                                }
                            }
                            break
                        }
                    }
                };
                
                /*
                o.find('.right-side').hover(function() {
                	s.find('.control-panel').show();
                }, function() {
                	s.find('.control-panel').hide();
                });
                */
                
                s.find('.control-panel a.edit-control-button').click(function () {
                    F()
                });
                s.find('.control-panel a.copy-control-button').click(function () {
                    var a = {
                        element: v,
                        controlId: t,
                        orderId: parseInt(v.attr("orderid"))
                    };
                    X.onCopy(a)
                });
                /*
                s.find('.control-panel a.transfer-control-button').click(function () {
                    alert("TRANSFER")
                });
                */
                s.find('.control-panel a.delete-control-button').click(function () {
                    var a = {
                        element: v,
                        controlId: t
                    };
                    X.onDelete(a)
                });
                
                
                /*
                if (X.isEditable) {
                    F()
                } else {
                    G()
                }
                */
                
                
                q.appendTo(v);
                
                G();
                
                if (X.isEditable) {
                    F();
                }
                
                lR();


                break
            }
        case 7:
            {
                break
            }
        case 10:
            {
                
            	var o = $("<div class=\"control-container\">" +
    			"<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">" +
    				"<tr>" +
		    			"<td valign=\"top\" class=\"left-side\">" +
							"<div class=\"tab-move-control\"></div>" +
						"</td>" +
						/*"<td style=\"width:1%\" valign=\"top\"><span class=\"number\"></span>.&nbsp;</td>" +*/
        				"<td valign=\"top\" class=\"right-side\">" +
	        				"<div class=\"control-edit ui-form\" style=\"display: none\">" +
		        				"<div class=\"row\" style=\"height: 52px;\">" +
		        					"<div class=\"cell\"><span class=\"label-edit-control-number\"></span>.&nbsp;</div>" +
		        					"<div class=\"cell\"><textarea style=\"width: 304px; height: 47px;\" autocomplete=\"off\" class=\"input-content\" maxlength=\"1000\"></textarea></div>" +
		        				"</div>" +
		        				
		        				"<div class=\"row-choice\">" +
		        					"<label><span><input type=\"checkbox\" class=\"checkbox-is-mandatory\"/></span>Required question</label>" +
		        				"</div>" +
		        				"<div class=\"row-choice\">" +
	                				"<label><span><input type=\"checkbox\" class=\"checkbox-link\" /></span>Add Image/Embed Code</label>" +
	                				"<div class=\"editor-link\" style=\"display: none; padding: 10px 0px 0px 20px;\">" +
		                				"<div>" +
		                					"<select class=\"select-link-type\"><option value=\"1\">Link to Image</option><option value=\"2\">Embed Code</option></select>" +
		                				"</div>" +
	            						"<div class=\"holder-image\" style=\"display: none; overflow: hidden;\">" +
	            							"<input class=\"input-image\" type=\"text\" style=\"width: 284px\" />" +
	            						"</div>" +
	            						"<div class=\"holder-embed-code\" style=\"display: none; overflow: hidden;\">" +
	            							"<textarea class=\"textarea-embed-code\" style=\"width: 284px; height: 47px;\" autocomplete=\"off\" ></textarea>" +
	            						"</div>" +
	        						"</div>" +
	                			"</div>" +
		        				"<div class=\"row-choice\">" +
		        					"<label><input type=\"checkbox\" class=\"checkbox-is-enable-note\" />Help text</label>" +
		        					"<div class=\"container-note\" style=\"display: none; height: 52px; padding: 10px 0px 0px 20px;\">" +
		        						"<textarea style=\"width: 284px; height: 47px;\" autocomplete=\"off\" class=\"textarea-note\" ></textarea>" +
		        					"</div>" +
		        				"</div>" +
		        				
		        				"<div>" +
		        					"<h2>Scale</h2>" +
		        					"<div class=\"row\">" +
		        						"<div class=\"cell\">from:</div><div class=\"cell\" style=\"margin-left: 8px;\"><select class=\"dropdown-from-scale\"><option value=\"0\">0</option><option value=\"1\">1</option></select></div><div class=\"cell\" style=\"margin-left: 8px;\">to:</div><div class=\"cell\" style=\"margin-left: 8px;\"><select class=\"dropdown-to-scale\"><option value=\"5\">5</option><option value=\"7\">7</option><option value=\"9\">9</option><option disabled=\"true\">---</option><option value=\"3\">3</option><option value=\"4\">4</option><option value=\"5\">5</option><option value=\"6\">6</option><option value=\"7\">7</option><option value=\"8\">8</option><option value=\"9\">9</option><option value=\"10\">10</option></select></div>" +
		        					"</div>" +
		        					"<h2>Labels (Optional)</h2>" +
		        					"<div class=\"row\">" +
		        						"<div class=\"cell\"><span class=\"label-from-scale\">0</span>:</div><div class=\"cell\" style=\"margin-left: 3px;\"><input type=\"text\" class=\"text-field input-from-title\" maxlength=\"50\" autocomplete=\"off\" /></div>" +
		        					"</div>" +
		        					"<div class=\"row\">" +
		        						"<div class=\"cell\"><span class=\"label-to-scale\">5</span>:</div><div class=\"cell\" style=\"margin-left: 3px;\"><input type=\"text\" class=\"text-field input-to-title\" maxlength=\"50\" autocomplete=\"off\" /></div>" +
		        					"</div>" +
		        				"</div>" +
		        				
		        				"<div>" +
		        					
									"<div style=\"display: none;\">" +
										"<h2>Display Options:</h2>" +
										"<div class=\"row\">" +
											"<div class=\"cell\" style=\"width: 130px;\">Answer field type:</div><div class=\"cell\"><select class=\"dropdown-input-type\"><option value=\"0\">Single Line</option><option value=\"1\">Multi Line</option><option value=\"2\">Password</option></select></div>" +
										"</div>" +
									"</div>" +
		        								
		        				"</div>" +
		        				"<div class=\"row\">" +
		        					"<div class=\"cell\"><a href=\"javascript:;\" title=\"Done Editing\" class=\"button-blue save-control-button\"><span>Done Editing</span></a></div><div class=\"cell\" style=\"padding-left: 8px; line-height: 21px;\"><a href=\"javascript:;\" title=\"Cancel\" class=\"cancel-control-button\">Cancel</a></div>" +
		        				"</div>" +
		        			"</div>" +
		        			"<div class=\"control-view demo-question\">" +
		        				"<div class=\"control-panel\"><a href=\"javascript:;\" class=\"edit-control-button button-white\" tag=\"edit\" title=\"Edit\"><span>Edit</span></a>&nbsp;<a href=\"javascript:;\" class=\"copy-control-button button-white\" tag=\"copy\" title=\"Copy\"><span>Copy</span></a>&nbsp;<a href=\"javascript:;\" class=\"delete-control-button\" tag=\"delete\" title=\"Delete\"><span>Delete</span></a></div>" +
		        				
		        				"<div class=\"demo-question-heading\">" +
		        					"<span class=\"number\"></span>.&nbsp;" +
		        					"<span class=\"label-mandatory\" style=\"display: none;\">*&nbsp;</span>" +
		        					"<span class=\"label-content\">Enter your question here.</span>" +
		        				"</div>" +
		        				"<div class=\"demo-question-content\">" +
			        				"<div class=\"container-embed-code q-image\" style=\"display: none\"></div>" +
			        				"<div class=\"label-note q-help\" style=\"display: none;\">You can enter some information about this question here.</div>" +
			        				"<ul class=\"container-control-includes\"></ul>" +
			        				"<div class=\"container-control-other\"></div>" +
		        				"</div>" +
		        			"</div>" +
        				"</td>" +
        			"</tr>" +
        		"</table>" +
        		"</div>");
                
            	var c = q; //.find('.form-center:first');
                o.appendTo(c);
                
                var link = null;
                var linkTypeId = 0;
                
                var r = o.find('.control-edit');
                var s = o.find('.control-view');
                var t = X.controlId;
                var R = r.find('.label-from-scale');
                var S = r.find('.label-to-scale');
                var T = r.find('.dropdown-from-scale')[0];
                var U = r.find('.dropdown-to-scale')[0];
                var V = function (a) {
                    T.selectedIndex = a;
                    R.text(T.options[T.selectedIndex].text)
                };
                var W = function (a) {
                    U.selectedIndex = a;
                    S.text(U.options[U.selectedIndex].text)
                };
                var F = function () {
                	q.addClass('selected');
                    for (var x = 0; x < survey.controls.list.length; x++) {
                        if (survey.controls.list[x].controlId == t) {
                            if (lastEditableControl != null && lastEditableControl != o) {
                                lastEditableControl.find('.control-edit').hide();
                                lastEditableControl.find('.control-view').show();
                                
                                lastEditableControl.parent().removeClass('selected');
                            }
                            lastEditableControl = o;
                            r.find('.checkbox-is-enable-note').unbind('change').change(function () {
                                if ($(this).is(':checked')) {
                                    r.find('.container-note').show()
                                } else {
                                    r.find('.container-note').hide()
                                }
                            });
                            r.find('.checkbox-is-mandatory').unbind('change').change(function () {});
                            
                            // link
                            var cl = r.find('.checkbox-link');
                            cl.unbind('change').change(function() {
                            	if ($(this).is(':checked')) {
                            		r.find('.editor-link').show();
                            		
                            		r.find('.select-link-type').unbind('change').change(function() {
                            			if($(this).val() == 1) {
                            				r.find('.holder-embed-code').hide();
                            				r.find('.holder-image').show();
                            				
                            				// set 
                            				if(survey.controls.list[x].link) {
                            					if(survey.controls.list[x].linkTypeId == 1)
                            						r.find('.input-image').val(survey.controls.list[x].link);
                            				}
                            			}
                            			if($(this).val() == 2) {
                            				r.find('.holder-image').hide();
                            				r.find('.holder-embed-code').show();
                            				
                            				// set
                            				if(survey.controls.list[x].link) {
                            					if(survey.controls.list[x].linkTypeId == 2)
                            						r.find('.textarea-embed-code').val(survey.controls.list[x].link);
                            				}
                            			}
                            		});
                            		
                            		var lo = r.find('.select-link-type')[0];
                            		
                            		if(survey.controls.list[x].link) {
                        				if(survey.controls.list[x].linkTypeId == 1) {
                        					lo.selectedIndex = 0;
                        					r.find('.select-link-type').change();
                        				}
                    					if(survey.controls.list[x].linkTypeId == 2) {
                        					lo.selectedIndex = 1;
                        					r.find('.select-link-type').change();
                    					}
                            					
                            		} else {
                            			lo.selectedIndex = 0;
                    					r.find('.select-link-type').change();
                            		}
                            		
                            	} else {
                            		r.find('.editor-link').hide();
                            		r.find('.input-image').val("");
                            		r.find('.textarea-embed-code').val("");
                            	}
                            	
                            });
                            
                            if(survey.controls.list[x].link) {
                            	cl.prop('checked', true).change();
                            } else {
                            	cl.prop('checked', false).change();
                            }
                            
                            // r.find('.input-content').val((survey.controls.list[x].content != "" ? survey.controls.list[x].content : contentDictionary.titles.title_Question));
                            r.find('.input-content')
	                        	.val((survey.controls.list[x].content != "" ? survey.controls.list[x].content : ""))
	                        	.inputMask({ defaultValue : contentDictionary.titles.title_Question });
                            
                            if (survey.controls.list[x].isEnableNote) {
                                
                            	// r.find('.textarea-note').val(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note : contentDictionary.titles.title_Note));
                            	r.find('.textarea-note')
	                        		.val(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note : ""))
	                        		.inputMask({ defaultValue : contentDictionary.titles.title_Note });
                            	
                            	r.find('.checkbox-is-enable-note')
                                 .prop('checked', survey.controls.list[x].isEnableNote); //.attr('checked', (survey.controls.list[x].isEnableNote ? 'checked' : ''));
                                r.find('.checkbox-is-enable-note').change()
                            } else {
                                
                            	// r.find('.textarea-note').val(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note : contentDictionary.titles.title_Note));
                            	r.find('.textarea-note')
	                        		.val(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note : ""))
	                        		.inputMask({ defaultValue : contentDictionary.titles.title_Note });
                            	
                            	r.find('.checkbox-is-enable-note')
                                 .prop('checked', survey.controls.list[x].isEnableNote); //.attr('checked', (survey.controls.list[x].isEnableNote ? 'checked' : ''));
                                r.find('.container-note').hide()
                            }
                            if (survey.controls.list[x].isMandatory) {
                                r.find('.checkbox-is-mandatory')
                                 .prop('checked', survey.controls.list[x].isMandatory); //.attr('checked', (survey.controls.list[x].isMandatory ? 'checked' : ''));
                                r.find('.checkbox-is-mandatory').change()
                            } else {
                                r.find('.checkbox-is-mandatory')
                                 .prop('checked', survey.controls.list[x].isMandatory); //.attr('checked', (survey.controls.list[x].isMandatory ? 'checked' : ''))
                            }
                            r.find('.dropdown-from-scale').unbind('change').change(function () {
                                var a = ($(this)[0].selectedIndex != undefined ? $(this)[0].selectedIndex : 0);
                                V(a)
                            });
                            r.find('.dropdown-to-scale').unbind('change').change(function () {
                                var a = ($(this)[0].selectedIndex != undefined ? $(this)[0].selectedIndex : 0);
                                W(a)
                            });
                            if (survey.controls.list[x].fromScale != undefined) {
                                V(survey.controls.list[x].fromScale)
                            } else {
                                V(1)
                            }
                            if (survey.controls.list[x].toScale != undefined) {
                                W(survey.controls.list[x].toScale)
                            } else {
                                W(0)
                            }
                            var c = r.find('.input-from-title');
                            if (survey.controls.list[x].fromTitle != undefined) {
                                c.val((survey.controls.list[x].fromTitle != "" ? survey.controls.list[x].fromTitle : ""))
                            }
                            var d = r.find('.input-to-title');
                            if (survey.controls.list[x].toTitle != undefined) {
                                d.val((survey.controls.list[x].toTitle != "" ? survey.controls.list[x].toTitle : ""))
                            }
                            r.find('.save-control-button').unbind("click").click(function () {
                                survey.controls.list[x].content = r.find('.input-content').val();
                                survey.controls.list[x].isEnableNote = r.find('.checkbox-is-enable-note').is(':checked');
                                survey.controls.list[x].note = r.find('.textarea-note').val();
                                survey.controls.list[x].isMandatory = r.find('.checkbox-is-mandatory').is(':checked');
                                
                                if(r.find('.checkbox-link').is(':checked')) {
                                	if(r.find('.select-link-type').val() == 1) {
                                		// link to image
                                		if(r.find('.input-image').val() != "") {
                                			survey.controls.list[x].linkTypeId = 1;
                                			survey.controls.list[x].link = r.find('.input-image').val();
                                		} else {
                                			survey.controls.list[x].linkTypeId = 0;
                                			survey.controls.list[x].link = null;
                                		}
                                	}
                                	
                                	if(r.find('.select-link-type').val() == 2) {
                                		// embed code
                                		if(r.find('.textarea-embed-code').val() != "") {
                                			survey.controls.list[x].linkTypeId = 2;
                                			survey.controls.list[x].link = r.find('.textarea-embed-code').val();
                                		} else {
                                			survey.controls.list[x].linkTypeId = 0;
                                			survey.controls.list[x].link = null;
                                		}
                                	}
                                } else {
                                	survey.controls.list[x].linkTypeId = 0;
                        			survey.controls.list[x].link = null;
                                }
                                
                                survey.controls.list[x].inputTypeId = 0; 
                                survey.controls.list[x].fromScale = T.selectedIndex;
                                survey.controls.list[x].toScale = U.selectedIndex;
                                survey.controls.list[x].fromTitle = c.val();
                                survey.controls.list[x].toTitle = d.val();
                                var b = {
                                    controlId: survey.controls.list[x].controlId
                                };
                                X.onSave(b, function (a) {
                                    G()
                                })
                            });
                            r.find('.cancel-control-button').unbind("click").click(function () {
                                G()
                            });
                            s.hide();
                            r.show();
                            
                            // default select
                            //r.find('.input-content').select();
                            
                            break
                        }
                    }
                };
                
                var lR = function() {
                	
                	// default select
                    //r.find('.input-content').select();
                    
                	if(link) {
                    	
                    	// image
                    	if(linkTypeId == 1) {
                    		s.find('.container-embed-code')
                    			.html("<img src=" + link + " />")
                    			.show();
                    	}
                    	
                    	// embed code
                    	if(linkTypeId == 2) {
                        	s.find('.container-embed-code')
                    			.html(link)
                    			.show();
                    	}
                    }
                };
                
                var G = function () {
                	q.removeClass('selected');
                    for (var x = 0; x < survey.controls.list.length; x++) {
                        if (survey.controls.list[x].controlId == t) {
                            r.hide();
                            s.show();
                            s.find('.label-content').html(survey.controls.list[x].content.replace(/\n/g, "<br/>"));
                            if (survey.controls.list[x].isMandatory) {
                                s.find('.label-mandatory').show()
                            } else {
                                s.find('.label-mandatory').hide()
                            }
                            
                            // link - view
                            if(survey.controls.list[x].link) {
                            	link = survey.controls.list[x].link;
                            	linkTypeId = survey.controls.list[x].linkTypeId;
                            	lR();
                            } else {
                            	s.find('.container-embed-code')
                            		.empty()
                            		.hide();
                            }
                            
                            if (survey.controls.list[x].isEnableNote) {
                                s.find('.label-note').html(((survey.controls.list[x].note != "" && survey.controls.list[x].note != null) ? survey.controls.list[x].note.replace(/\n/gi, "<br/>").replace(/%0A/gi, "<br/>") : contentDictionary.titles.title_Note)).show()
                            } else {
                                s.find('.label-note').hide()
                            }
                            var a = s.find('.container-control-other');
                            a.empty();
                            var b = [5, 7, 9, 0, 3, 4, 5, 6, 7, 8, 9, 10]
                            var c = $("<table cellpadding=\"0\" cellspacing=\"1\" border=\"0\" class=\"table-scale\"></table>");
                            var d = $("<tr class=\"table-scale-header\"></tr>");
                            var e = $("<tr class=\"table-scale-row\"></tr>");
                            var f = $("<td>&nbsp;</td>");
                            var g = $("<td>&nbsp;</td>");
                            if (survey.controls.list[x].fromScale != null && survey.controls.list[x].toScale != null) {
                                if (survey.controls.list[x].fromTitle != "" && survey.controls.list[x].fromTitle != null) {
                                    d.append(f);
                                    var h = $("<th>" + survey.controls.list[x].fromTitle + "</th>");
                                    e.append(h)
                                }
                                for (var y = survey.controls.list[x].fromScale; y < (b[survey.controls.list[x].toScale] + 1); y++) {
                                    var i = $("<th>" + y + "</th>");
                                    d.append(i);
                                    var j = $("<td><label><input type=\"radio\" name=\"" + survey.controls.list[x].controlId + "\" /></label></td>");
                                    e.append(j)
                                }
                                if (survey.controls.list[x].toTitle != "" && survey.controls.list[x].toTitle != null) {
                                    d.append(g);
                                    var k = $("<th>" + survey.controls.list[x].toTitle + "</th>");
                                    e.append(k)
                                }
                                c.append(d);
                                c.append(e);
                                a.append(c)
                            } else {
                                for (var y = 1; y < (b[0] + 1); y++) {
                                    var i = $("<th>" + y + "</th>");
                                    d.append(i);
                                    var j = $("<td><label><input type=\"radio\" name=\"" + survey.controls.list[x].controlId + "\" /></label></td>");
                                    e.append(j)
                                }
                                c.append(d);
                                c.append(e);
                                a.append(c)
                            }
                            break
                        }
                    }
                };
                
                /*
                o.find('.right-side').hover(function() {
                	s.find('.control-panel').show();
                }, function() {
                	s.find('.control-panel').hide();
                });
                */
                
                s.find('.control-panel a.edit-control-button').click(function () {
                    F()
                });
                s.find('.control-panel a.copy-control-button').click(function () {
                    var a = {
                        element: v,
                        controlId: t,
                        orderId: parseInt(v.attr("orderid"))
                    };
                    X.onCopy(a)
                });
                /*
                s.find('.control-panel a.transfer-control-button').click(function () {
                    alert("TRANSFER")
                });
                */
                s.find('.control-panel a.delete-control-button').click(function () {
                    var a = {
                        element: v,
                        controlId: t
                    };
                    X.onDelete(a)
                });
                
                
                /*
                if (X.isEditable) {
                    F()
                } else {
                    G()
                }
                */
                
                
                q.appendTo(v);
                
                G();
                
                if (X.isEditable) {
                    F();
                }
                
                lR();


                break
            }
        case 11:
        	{	
	        	// Hidden param
        		var t = X.controlId;
	        	var o = $("<div class=\"control-container\">" +
	        		"<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">" +
	        			"<tr>" +
	        				"<td valign=\"top\" class=\"left-side\">" +
	        					"<div class=\"tab-move-control\"></div>" +
	        				"</td>" +
	        				"<td valign=\"top\" class=\"right-side\">" +
		        				"<div class=\"control-edit ui-form\" style=\"display: none\">" +
		        					"<div>" +
		        						"<div>Name/Key:</div>" +
		        						"<div><input type=\"text\" id=\"text_key_" + t + "\" name=\"text_key_" + t + "\" /></div>" +
		        						"<div><label id=\"status_key_" + t + "\"></label></div>" +
		        					"</div>" +
		        					"<div style=\"padding-top: 8px;\">" +
			        					"<div class=\"params\">" +
			    							"<div class=\"param-value\">" +
			    								"<a href=\"#\" title=\"Done Editing\" class=\"button-blue save-control-button\"><span>Done Editing</span></a>" +
			    							"</div>" +
			    							"<div class=\"param-value\" style=\"margin-left: 6px; line-height: 20px;\">" +
			    								"<a href=\"#\" title=\"Cancel\" class=\"cancel-control-button\">Cancel</a>" +
			    							"</div>" +
			    						"</div>" +
		        					"</div>" +
		        				"</div>" +
		        				"<div class=\"control-view demo-question\">" +
		        					"<div class=\"demo-question-heading\">[<span class=\"label-key\">undefined</span>]</div>" +
		        					"<div class=\"control-panel\">" +
		        						"<a href=\"#\" class=\"edit-control-button button-white\" tag=\"edit\" title=\"Edit\"><span>Edit</span></a>" +
		        						"&nbsp;<a href=\"#\" class=\"copy-control-button button-white\" tag=\"copy\" title=\"Copy\"><span>Copy</span></a>" +
		        						"&nbsp;<a href=\"#\" class=\"delete-control-button\" tag=\"delete\" title=\"Delete\"><span>Delete</span></a>" +
		        					"</div>" +
		        				"</div>" +
		        			"</td>" +
		        		"</tr>" +
		        	"</table>" +
	        	"</div>");
	        	
	        	
	        	var c = q;
	            o.appendTo(c);
	            
	            var r = o.find('.control-edit');
	            var s = o.find('.control-view');
	            
	            
	            var F = function () {
	            	q.addClass('selected');
	            	for (var x = 0; x < survey.controls.list.length; x++) {
	                    if (survey.controls.list[x].controlId == t) {
	                        if (lastEditableControl != null && lastEditableControl != o) {
	                            lastEditableControl.find('.control-edit').hide();
	                            lastEditableControl.find('.control-view').show();
	                            
	                            lastEditableControl.parent().removeClass('selected');
	                        }
	                        lastEditableControl = o;
	                        
	                        
	                        s.hide();
	                        r.show();
	                        
	                        
	                        
	                        // set
	                        //r.find('#text_key_' + t).val(survey.controls.list[x].key);
	                        
	                        var I = r.find('#text_key_' + t);
	                        var B = r.find('#status_key_' + t)
	                        	
	                        // set value
	                        I.val(survey.controls.list[x].key);	
	                        	
	                        
	                        // validator
	                        var v = null;
	                        v = new validator({
	    						elements : [
	    							{
	    								element : I,
	    								status : B,
	    								rules : [
	    									{ method : 'required', message : 'This field is required.' }
	    								]
	    							}
	    						],
	    						submitElement : null,
	    						messages : null,
	    						accept : function () {
	    							
	    							survey.controls.list[x].key = I.val();
		                            var b = {
		                                controlId : t
		                            };
		                            X.onSave(b, function (a) {
		                                G();
		                            })
	    							
	    						},
	    						error: function() {
	    							
	    						}
	                        });
	                        
	                        // save 
	                        r.find('.save-control-button').unbind('click').click(function (e) {
	                        	
	                        	// run validator
	                        	v.validate();
	                        	
	                            e.preventDefault();
	                        });
	                        
	                        // cancel
	                        r.find('.cancel-control-button').unbind('click').click(function (e) {
	                            G();
	                            
	                            e.preventDefault();
	                        });
	                        
	                        break;
	                    }
	            	}
	            	
	            };
	            
	            var G = function () {
	            	q.removeClass('selected');
	            	for (var x = 0; x < survey.controls.list.length; x++) {
	                    if (survey.controls.list[x].controlId == t) {
	                    	
	                        r.hide();
	                        s.show();
	                        
	                        s.find('.label-key').text(survey.controls.list[x].key);
	                        
	                        
	                        break;
	                    }
	            	}
	            };
	            
	            q.appendTo(v);
	            
	            
	            
	            // controls
	            o.find('.control-panel a.edit-control-button').click(function(e) {
	                F();
	            	
	            	e.preventDefault();
	            });
	            o.find('.control-panel a.copy-control-button').click(function(e) {
	                
	            	var a = {
	                    element: v,
	                    controlId: t,
	                    orderId: parseInt(v.attr("orderid"))
	                };
	                X.onCopy(a);
	                
	                e.preventDefault();
	            });
	            o.find('.control-panel a.delete-control-button').click(function(e) {
	            	
	                var a = {
	                    element: v,
	                    controlId: t
	                };
	                X.onDelete(a);
	                
	                e.preventDefault();
	            });
	            
	            G();
	            
	            if (X.isEditable) {
	                F();
	            }
	            
	        	
	        	break;
        	}
        case 12:
        	{
        	
        		var t = X.controlId;
	        	// Heading/Descritive text
	        	var o = $("<div class=\"control-container\">" +
		        	"<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\">" +
	        			"<tr>" +
	        				"<td valign=\"top\" class=\"left-side\">" +
	        					"<div class=\"tab-move-control\"></div>" +
	        				"</td>" +
	        				"<td valign=\"top\" class=\"right-side\">" +
			    				"<div class=\"control-edit ui-form\" style=\"display: none\">" +
			    					"<div>" +
			    						"<div>Heading Text:</div>" +
			    						"<div><textarea id=\"textarea_content_" + t + "\" name=\"textarea_content_" + t + "\" style=\"width: 304px; height: 47px;\" autocomplete=\"off\" maxlength=\"1000\"></textarea></div>" +
			    						"<div><label id=\"status_content_" + t + "\"></label></div>" +
			    					"</div>" +
			    					"<div>" +
										"<div>Descriptive Text:</div>" +
										"<div><textarea id=\"textarea_note_" + t + "\" name=\"textarea_note_" + t + "\" style=\"width: 304px; height: 47px;\" autocomplete=\"off\" maxlength=\"1000\"></textarea></div>" +
									"</div>" +
									"<div style=\"padding-top: 8px;\">" +
			    						"<div class=\"params\">" +
			    							"<div class=\"param-value\">" +
			    								"<a href=\"#\" title=\"Done Editing\" class=\"button-blue save-control-button\"><span>Done Editing</span></a>" +
			    							"</div>" +
			    							"<div class=\"param-value\" style=\"margin-left: 6px; line-height: 20px;\">" +
			    								"<a href=\"#\" title=\"Cancel\" class=\"cancel-control-button\">Cancel</a>" +
			    							"</div>" +
			    						"</div>" +
			    					"</div>" +
			    				"</div>" +
			    				"<div class=\"control-view demo-question\">" +
				    				"<div class=\"demo-question-heading\">" +
										"<span class=\"label-content\"></span>" +
									"</div>" +
									"<div class=\"demo-question-content\">" +
				    					"<div class=\"label-note\" style=\"display: none\"></div>" +
				    				"</div>" +
			    					"<div class=\"control-panel\">" +
			    						"<a href=\"#\" class=\"edit-control-button button-white\" tag=\"edit\" title=\"Edit\"><span>Edit</span></a>" +
			    						"&nbsp;<a href=\"#\" class=\"copy-control-button button-white\" tag=\"copy\" title=\"Copy\"><span>Copy</span></a>" +
			    						"&nbsp;<a href=\"#\" class=\"delete-control-button\" tag=\"delete\" title=\"Delete\"><span>Delete</span></a>" +
			    					"</div>" +
			    				"</div>" +
			    			"</td>" +
			    		"</tr>" +
			    	"</table>" +
	    		"</div>");
	    	
	    	
		    	var c = q;
		        o.appendTo(c);
		        
		        var r = o.find('.control-edit');
		        var s = o.find('.control-view');
		        
	        	
		        var F = function () {
	            	q.addClass('selected');
	            	for (var x = 0; x < survey.controls.list.length; x++) {
	                    if (survey.controls.list[x].controlId == t) {
	                        if (lastEditableControl != null && lastEditableControl != o) {
	                            lastEditableControl.find('.control-edit').hide();
	                            lastEditableControl.find('.control-view').show();
	                            
	                            lastEditableControl.parent().removeClass('selected');
	                        }
	                        lastEditableControl = o;
	                        
	                        
	                        s.hide();
	                        r.show();
	                        
	                        
	                        
	                        var I = r.find('#textarea_content_' + t);
	                        var IS = r.find('#status_content_' + t);
	                        
	                        // set content
	                        I.val(survey.controls.list[x].content);
	                        
	                        var N = r.find('#textarea_note_' + t);
	                        
	                        // set note
	                        N.val(survey.controls.list[x].note);
	                        
	                        N.on('keydown', function() {
	                        	IS.hide();
	                        });
	                        
	                        
	                        // validator
	                        var v = null;
	                        v = new validator({
	    						elements : [
									{
										element : I,
										status : IS,
										validate : function() {
											return (N.val() == "");
										},
										rules : [
											{ method : 'required', message : 'This field is required.' }
										]
									}
	    						],
	    						submitElement : null,
	    						messages : null,
	    						accept : function () {
	    							
	    							survey.controls.list[x].content = I.val();
		                        	survey.controls.list[x].isEnableNote = (N.val() != "" ? true : false);
		                        	survey.controls.list[x].note = N.val();
		                        	
		                            var b = {
		                                controlId : t
		                            };
		                            X.onSave(b, function (a) {
		                                G();
		                            })
	    							
	    						},
	    						error: function() {
	    							
	    						}
	                        });
	                        
	                        
	                        
	                        // save 
	                        r.find('.save-control-button').unbind('click').click(function (e) {
	                        	
	                        	v.validate();
	                        	
	                            e.preventDefault();
	                        });
	                        
	                        // cancel
	                        r.find('.cancel-control-button').unbind('click').click(function (e) {
	                            G();
	                            
	                            e.preventDefault();
	                        });
	                        
	                        break;
	                    }
	            	}
	            	
	            };
	            
	            var G = function () {
	            	q.removeClass('selected');
	            	for (var x = 0; x < survey.controls.list.length; x++) {
	                    if (survey.controls.list[x].controlId == t) {
	                    	
	                        r.hide();
	                        s.show();
	                        
	                        if(survey.controls.list[x].content != null) {
	                        	s.find('.label-content').html(survey.controls.list[x].content.replace(/\n/gi, "<br/>").replace(/%0A/gi, "<br/>"));
	                        } else {
	                        	s.find('.label-content').empty();
	                        }
	                        
	                        if (survey.controls.list[x].isEnableNote) {
	                            s.find('.label-note')
	                            .show()
	                            .html(survey.controls.list[x].note.replace(/\n/gi, "<br/>").replace(/%0A/gi, "<br/>"));
	                        } else {
	                            s.find('.label-note')
	                            .hide()
	                            .empty();
	                        }
	                        
	                        break;
	                    }
	            	}
	            };
		        
		        q.appendTo(v);
	            
	            
	            
	            // controls
	            o.find('.control-panel a.edit-control-button').click(function(e) {
	                F();
	            	
	            	e.preventDefault();
	            });
	            o.find('.control-panel a.copy-control-button').click(function(e) {
	                
	            	var a = {
	                    element: v,
	                    controlId: t,
	                    orderId: parseInt(v.attr("orderid"))
	                };
	                X.onCopy(a);
	                
	                e.preventDefault();
	            });
	            o.find('.control-panel a.delete-control-button').click(function(e) {
	            	
	                var a = {
	                    element: v,
	                    controlId: t
	                };
	                X.onDelete(a);
	                
	                e.preventDefault();
	            });
	            
	            G();
	            
	            if (X.isEditable) {
	                F();
	            }
		        
	        	
	        	break;
        	}
        	
        }
        
    }
    Y(X.controlTypeId)
};